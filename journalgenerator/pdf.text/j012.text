dx
dt
6
 
-
?
ДИФФЕРЕНЦИАЛЬНЫЕ УРАВНЕНИЯ
И
ПРОЦЕССЫ УПРАВЛЕНИЯ
N 1, 1998
Электронный журнал,
рег. N П23275 от 07.03.97

e-mail: diff@osipenko.stu.neva.ru
Фильтрация и идентификация
Применение методов теории
реактивных систем в задачах
моделирования и качественного анализа
непрерывно–дискретных систем.
Е.Ю. Парийская
Россия, 191187, Санкт-Петербург, Кутузовская наб., д.10
Институт теоретической астрономии РАН,
e-mail: epar@homesao.spb.su
Аннотация.
Статья представляет обзор и анализ современных методов качествен-
ного анализа и синтеза теории реактивных систем, которые могут быть
использованывзадачахмоделированияианализанепрерывно–дискретных
систем. Проведена классификация непрерывно–дискретных систем по при-
знаку разрешимости существующих методов теории реактивных систем.
1. Введение
Непрерывно–дискретной системой называется параллельная и распреде-
ленная система, состоящая из взаимодействующих элементов различной
природы, поведение которых описывается как непрерывными, так и дис-
кретными процессами.Дифференциальные уравнения и процессы управления, N. 1, 1998
C
0
C
1
···
- - - -k k
k
kk
 
   
 
  	
@
@ R
@
@ I
?
-
системное время
t
0
t
1
t
1
t
2
Рис.1.Схемаповедениянепрерывно-дискретнойсистемы,C
i
–классическиединамические
системы.
Глобальноеповедениенепрерывно–дискретнойсистемыописываетсяпо-
следовательностью локальных поведений, смена которых происходит под
воздействием событий. Наступление того или иного события зависит от
значений непрерывных параметров и, следовательно, от функций локаль-
ныхповедений.Сдругойстороны,однособытиеможетпорождатьдругие,
и сам дискретный процесс, результатом которого является выбор нового
локального поведения, описывается в общем случае нетривиальным дис-
кретным алгоритмом.
Поведениенепрерывно–дискретнойсистемыможно,такимобразом,пред-
ставитьбесконечнойпоследовательностьюсменяющихдругдругадлитель-
ных непрерывных и мгновенных дискретных поведений (рис.1), а саму си-
стему — графом смены поведений, в котором каждая вершина определяет
поведениевтекущиймоментвремени,акаждыйпереход —условиясмены
поведений [4],[6].
Примерами непрерывно-дискретных систем могут служить транспорт-
ные системы, системы слежения, надежные системы управления физиче-
скими процессами с аварийными ситуациями, системы, состоящие из па-
раллельных взаимодействующих динамических подсистем.

Разработкапрограммныхкомплексов,автоматизирующихпроцессымо-
делирования и анализа непрерывно–дискретных систем имеет уже более
чем тридцатилетнюю историю
1
([1],[2],[3],[9]). С появлением новых подхо-
дов к моделированию и анализу, в частности, технологии символьных вы-
числений ([28],[29]) и автоматических методов качественного анализа тео-
рии реактивных систем ([14],[30],[24]) в настоящее время открылись новые
возможности для решения этой задачи.
Анализ методов моделирования, которые лежат в основе современных
вычислительных комплексов, показывает, что сегодня применяются толь-
кодваподходакисследованиюнепрерывно–дискретныхсистем:численное
моделирование отдельных траекторий и частичный качественный анализ
свойств глобального поведения. Однако, непрерывная и дискретная компо-
ненты входят в систему как равноправные, равнозначные части и прене-
брежениеилинеобоснованноеупрощениеповедениякакодной,такидругой
компонентыпочтивсегдаприводиткнеадекватностиполученнойвычисли-
тельной модели. Сейчас представляется очевидным, что задача автомати-
зации моделирования и анализа непрерывно–дискретных систем требует
объединения в единую технологию технологии моделирования непрерыв-
ных процессов и технологии моделирования дискретных процессов. Такая
технология была бы в данном случае наиболее адекватной и эффектив-
ной. Основная идея новой технологии — возможность единого описания
непрерывной и дискретной комнонент и предоставление пользователю воз-
можностиприменениядлякаждойкомнонентысвоихоптимальныхметодов
моделирования и анализа [5].
Статья представляет обзор современных дискретных методов, разрабо-
танных в теории реактивных систем, которые могли бы быть включены в
такую технологию.
Можно рассматривать две основные идеи использования дискретных
методоввкачествеинструментаисследованиянепрерывно–дискретныхси-
стем.Перваязаключаетсявиспользованииклассическихалгоритмовавто-
матическойверификации (”model checking”алгоритмов)дискретныхсистем
[22],[14]прианализедискретнойкомпонентыидискретныхпериодовразви-
тия системы. Этот анализ может заключаться, к примеру, в обнаружении
циклов,решенияпроблемтупиковивобнаружениинедостижимыхсостоя-
ний в отдельно взятой дискретной компоненте, что значительно упростит
1
термины”смешанная”,”агрегативная”,”непрерывно–дискретная”,”событийно–управляемая”,”система
переменной структуры”, ”гибридная”, как показано в [8], являются синонимами и вводились разными
авторами для обозначения одного и того же класса систем

процедуру моделирования глобального поведения непрерывно–дискретных
системы,длякоторойвцеломможетиспользоватьсятехнологиянепрерыв-
ного моделирования.
Другая идея заключается в проведении оценок значений непрерывных
переменных системы, участвующих в локальных поведениях, и в замене
в математической модели непрерывно–дискретной системы соответствую-
щих локальных поведений на их параматрические оценки c целью приме-
нения современных методов символьной верификации теории реактивных
систем [23] для проверки качественных поведенческих свойств всей непре-
рывно–дискретнойсистемыилинекоторойеечасти.Этотподходнаиболее
привлекателендлясистемсдискретнойчастьюпроизвольнойсложностии
с несложной непрерывной компонентой и может быть использован в новой
технологии на начальном этапе проектирования и анализа систем.
Здесь мы ограничиваемся рассмотрением второй идеи, которая легла в
основу ”гибридного направления”(Hybrid Systems) — одного из современ-
ныхнаправлениймоделированияианализанепрерывно-дискретныхсистем
[9],[21].
Гибридное направление появилось в начале 1990-х годов на базе дис-
кретного темпорального подхода, разработанного для систем реального
времени в теории реактивных систем. С появлением метода символьной
верификации для систем реального времени (1992 год, [22]), появилась на-
дежда автоматизировать верификацию гибридных систем. В 1995-96 году
создана система HyTech [27] автоматической верификации гибридных си-
стем, основанная на символьной верификации.
Структура статьи следующая. Во второй главе представлена базовая
математическая модель дискретной параллельной распределенной систе-
мы, основные средства описания поведенческих свойств и некоторые базо-
вые понятия теории реактивных систем, на которых строится вся теория
автоматической верификации. В третьей главе дано определение гибрид-
ной системы. Последняя часть посвящена обзору современных направле-
ний верификации гибридных систем. Обсуждается проблема разрешимо-
сти различных методов для гибридных систем в целом и для отдельных
подклассов, Представлен основной алгоритм символьной верификации ги-
бридныхсистеминесколькопростейшихпримеров,демонстрирующихвоз-
можностьприменения этогометодавзадачахкачественногоанализапове-
денческих свойств классических систем управления.

2. Основные понятия теории реактивных систем
Под реактивной системой понимается система, целью которой является
поддержкавзаимодействиясокружением.Кклассуреактивныхсистемот-
носятоперационныесистемы,мультипрограммныесреды,параллельныеи
распределенные дискретные системы, дискретные системы реального вре-
мени, вычислительные сети.
Реактивнуюсистемуиееокружениеудобнопредставлятьввидепарал-
лельной системы, в которой обе эти компоненты функционируют парал-
лельно,взаимодействуядругсдругом.Дискретныйтемпоральныйподход,
разработанный в теории реактивных систем для решения задач модели-
рования и анализа реактивных систем, основывается на предположении,
что как сама система, так и ее окружение, моделируются как дискретные
процессы. Это предположение удобно, так как позволяет выполнять сим-
метричный анализ системы и ее окружения. Поэтому основным объектом
исследования теории реактивных систем принято считать дискретную па-
раллельную систему.
Элементами параллельной дискретной системы являются дискретные
системы(называемыепроцессами),параллельнофункционирующиевовре-
мени.Этипроцессымогутбытьнезависимымидруготдругаиконкуриро-
вать за общие ресурсы (асинхронные конкурентные системы), взаимодей-
ствовать между собой, выполняя общую задачу (кооперативные распреде-
ленныесистемы)ит.д.Глобальноеповедениепараллельнойдискретнойси-
стемыпредставляетсямножествомпоследовательностейсменыееглобаль-
ных состояний
2
во времени, которые можно привязать либо к событиям,
вызывающим смену состояний, либо к тактам времени.
Можно сказать поэтому, что теория реактивных систем занимается
изучением последовательностей состояний, порождаемых реактивной си-
стемой в процессе функционирования (анализом свойств этих последова-
тельностей, синтезом ”правильных”последовательностей, моделированием
систем, которые порождают последовательности, обладающие заданными
свойствами и т.п.). Понятие последовательности состояний, которое назы-
вается вычислением (сценарием, историей), является базовым понятием,
на котором строится вся теория реактивных систем.
Основным свойством реактивной системы является отсутствие терми-
2
глобальным состоянием параллельной дискретной системы называется кортеж, в который входят по
одному состоянию для каждого параллельного процесса

нальности. В теории реактивных систем вводится понятие робастности,
которое характеризует возможность безостановочной работы системы в
любых ситуациях. Вторым важным свойством реактивной системы явля-
етсято,чтоонаявляетсяэлементомпараллельнойсистемыидолжнапери-
одически обмениваться с окружением необходимой информацией. Поэтому
важнейшими вопросами в теории реактивных систем являются вопросы
параллелизма и синхронизации.
Теория реактивных систем занимается проблемамиспецификациииве-
рификации реактивных систем.
Под спецификацией понимают разработку математической модели ре-
активнойсистемы.Вкачествемоделейреактивныхсистемобычноисполь-
зуются сети Петри [15], модель CSP Ч.Хоара [17], алгебра взаимодейству-
ющих процессов CCS Р.Милнера [18], системы переходов А.Пнуэли [19],
временная алгебра процессов [16] и другие.
2.1. Cистемы переходов
Поведение произвольной дискретной системы может быть описано автома-
том M =
n
Q,Σ,δ,q
0
,F
o
с множеством состояний Q, выделенным началь-
ным состоянием q
0
∈Q, множеством конечных состояний F⊆Q, входным
алфавитом Σ (который называется также алфавитом событий) и задан-
ной функцией переходов из состояния в состояние δ(q,a), определяющей
следующее состояние по текущему состоянию q и полученному входному
символу a и реализующей некоторое множество мгновенных действий.
В начале 1980-х годов для спецификациии параллельных и распреде-
ленных дискретных систем была предложена расширенная модель автома-
та, так называемая система переходов (A.Пнуэли). В отличие от автома-
та,основнойфункциейкоторогоявляетсяраспознаваниеконечныхцепочек
символов входного алфавита (то есть проверка возможности реализации
автоматомконкретнойцепочки),основнойфункциейсистемыпереходовяв-
ляется порождение всевозможных (в том числе бесконечных) последова-
тельностейсостоянийиззаданногомножестваначальныхсостоянийипри
заданноммножествепереходов.Этамодельлеглавосновуматематической
модели, разработанной для непрерывно–дискретных систем.
Определение 2.1. Системойпереходовназываетсяследующаяконструк-

ция [7]:
S =
n
X , Σ , T , Θ
o
, (1)
где
X – множество переменных над областью определения D
Σ :{ X→D} – множество состояний системы
Θ∈ Σ – множество начальных состояний
T ⊆{Σ→ Σ} – конечное множество переходов.
Определение 2.2. Вычислением системы переходов называется любая
цепочка σ∈ Σ
∗
,σ =s
0
s
1
...s
n
(n произвольно), такая что
a) s
0
∈ Θ
b) (∀ i)(∃ !τ∈T) :τ(s
i
) =s
i+1
Функционированиереактивнойсистемыпредставляетсямножествомвсех
возможных вычислений ее системы переходов.
Системы переходов удобны при спецификации параллельных дискрет-
ныхсистем,таккакпараллельнаякомпозициясистемпереходовбудеттак-
жеявлятьсянекоторойсистемойпереходов,функционированиекотороймо-
жет быть представлено множеством ее вычислений. Часто совместное по-
ведение параллельных процессов нагляднее и эффективнее представлять в
виде дерева, в котором можно проследить пути развития каждого из них.
Поэтому часто наряду с обычными вычислениями (которые называются
в теории реактивных систем линейными вычислениями) используют так
называемые деревья вычислений (computation tree, подробнее см. [12]).
Алгоритмы верификации, разработанные на основе модели системы пе-
реходов,позволяютисследоватьсвойствареактивнойсистемысточностью
до порядка наступления событий
3
в системе, то есть проводить анализ ка-
чественных свойств ее поведения. Однако, во многих случаях (в системах
реального времени) бывает необходимо учитывать конкретные моменты
времени наступления событий и время выполнения отдельных операций.
3
Понятие ”события”здесьидалеенесоответствуетклассическому ”событию”какпаре <состояние,вре-
мя>. В теории реактивных систем оно заимствовано из теории автоматов и обозначает метку (букву
алфавита) на некотором переходе. Порядок наступления событий в реактивной системе есть относитель-
ный порядок следования переходов (или состояний) в вычислении ее системы переходов (или порядок
следования меток в допущенной цепочке автомата)

Имеетсядвеальтернативныевозможностиввестивремяввычислитель-
нуюмодельреактивнойсистемы.Одназаключаетсявучетедлительностей
нахождения в каждом дискретном состоянии и реализуется введением за-
держек срабатывания переходов в системе переходов. Другая заключается
в отслеживании моментов наступления событий в реактивной системе и
может быть реализована в модели таймированного автомата.
Определение 2.3. Системой временных переходов называется тройка
[7]:
S
T
= < S, L , U >, (2)
где
S — система переходов (1), а L,U — множества нижних и верхних
границинтерваловвременныхзадержексрабатыванияактивизированных
переходов τ∈T :
L ={l
τ
,τ∈T}
U ={u
τ
,τ∈T}
0≤l
τ
≤u
τ
, l
τ
,u
τ
∈R
Поведение системы временных переходов, фиксируемое одним последо-
вательным наблюдателем представляется последовательностью событий
двух типов: событие изменения времени при неизменном состоянии и по-
следующего за ним одного или нескольких событий изменения состояний
при фиксированном времени. Пример такого представления поведения ре-
активной системы, которое впервые было дано в [19], показан на рис.2.
Функционирование временной системы переходов характеризуется мно-
жеством всевозможных качественных вычислений (нетаймированных) и
соответствующиммножествомвсевозможных”точечных”вычислений,уко-
торых к каждому состоянию приписывается момент времени, в который
система перешла в это состояние.
Определение 2.4. Точечным вычислением временной системы переходов
S
T
называется цепочка ρ
T
= (s
0
,t
0
)(s
1
,t
1
)...(s
n
,t
n
)∈ (Σ×T)
∗
, т.ч.
a) s
0
s
1
...s
n
допустима в соответствующей системе переходов S, то
есть (∀ i)(∃ !τ∈T) :τ(s
i
) =s
i+1
b)∀ i < n : t
i
≤ t
i+1
– все события происходят последовательно во
времени

6
?
?
6
?
...........................................
................................
.............
.............
.
.
.
.
.
.
·
.
.
.
.
.
.
·
.
.
.
.
.
.
·
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
-
Время
t
0
t
1
t
2
,t
3
t
4
t
5
s
0
s
3
s
2
s
1
Рис. 2. Поведение системы переходов
c)∀τ ∈T и j ≥ 0,∃i≤ j, т.ч. t
i
+l
τ
≤ t
j
и переход τ непрерывно
возможен в состояниях s
i
...s
j
но еще не произошел
d)∀τ∈T и i≥ 0,∃j,i≤j, т.ч. t
i
+u
τ
≥t
j
и переход τ произошел в j
или уже стал невозможен
Каждомукачественномувычислениюсистемывременныхпереходовсо-
ответсвует множество (пучок) точечных вычислений.
Модель таймированного автомата представляет собой автомат, с кото-
ромкаждомусобытиюизалфавитасобытийавтоматаможетбытьпостав-
ленавсоответствиенекотораявещественнаяпеременнаяx (часы,таймер),
значение которой увеличивается в соответствии с увеличением реального
времени (по линейному закону dx/dt = 1). На переходах автомата тай-
меры могут обнуляться. Таким образом, таймированный автомат может
отслеживатьабсолютноевремянаступленияотдельныхсобытийиотноси-
тельное время между событиями одного или различных классов.
Определение 2.5. Таймированнымавтоматомназываетсяавтоматви-
да [41]:
A = < Σ, T , L , L
0
, L
F
, E > (3)
где

Σ — конечный входной алфавит (алфавит событий)
T — конечное множество таймеров
L — множество вершин автомата, L
0
,L
F
⊆L — начальные и конеч-
ные вершины
E — множество дуг. Каждая дуга помечена буквой алфавита со-
бытий, условием перехода по дуге в виде линейных целочисленных нера-
венств над значениями таймеров и набором таймеров, которые должны
быть обнулены на дуге.
Таймированный автомат распознает таймированные слова над алфави-
томсобытий Σ —конечныецепочки (a
0
,t
0
)(a
1
,t
1
)...(a
n
,t
n
),a
i
∈ Σ,t
i
∈R
+
.
Каждому слову входного алфавита, допущенному таймированным автома-
том, соответствует множество (пучок) таймированных слов.
Можно показать, что модель системы временных переходов и модель
таймированного автомата эквивалентны [41].
2.2. Темпоральная логика
Теория реактивных систем занимается разработкой средств удобного и
выразительного описания свойств, которыми должна обладать реактив-
наясистема, —спецификациейтребованийкповедениюсистемы.Ктаким
требованиям относятся принципиальная возможность или невозможность
отдельныхсобытий,порядокследованиясобытийипричинно-следственные
связи между событиями.
Типичными требованиями к параллельным системам являются, напри-
мер,гарантиянедопустимостиопределенных (аварийных)ситуацийвпро-
цессефункционированиясистемы,требованиеотсутствиятупиковыхситу-
аций при работе с общими ресурсами, требование взаимного исключения
при вхождении в критическую секцию нескольких параллельных процес-
сов, гарантия отсутствия бесконечного ожидания ресурса некоторым про-
цессом, гарантия достижения некоторой цели (за определенное время) и
т.д.
Требования к поведению делятся на два основных класса (классифика-
ция предложена Л.Лэмпортом [38],[39])— требования корректности (safety,
гарантиятого,чтонекотороесвойствосохраняетсявовсехсостоянияхвсех
вычислений системы) и требования жизнеспособности (liveness, гарантия
того, что некоторое событие когда-то в будущем произойдет в системе,

k k k k - - - -
···
s
0
s
1
s
2
s
3
p p p p
a) требование корректности:  p
k
k
k
 
 
  *
H
H
H j
k
k
 
 
  *
H
H
H j
k
H
H
H j
k
 
 
  *
 
 
  *
k
k
 
 
  *
H
H
H j
 
 
  *
H
H
H j
k
k
H
H
H j
 
 
  *
H
H
H j
···
···
···
s
0
p
p
p
б)∀-жизнеспособность:∀♦p
k
k
k
 
 
  *
H
H
H j
k
k
 
 
  *
H
H
H j
k
H
H
H j
k
 
 
  *
 
 
  *
k
k
 
 
  *
H
H
H j
 
 
  *
H
H
H j
k
k
H
H
H j
 
 
  *
H
H
H j
···
···
···
s
0
p
в)∃-жизнеспособность:∃♦p
Рис. 3. Базовые требования к поведению реактивной системы.
или, другими словами, некоторое cвойство будет истинно над некоторым
достижимымсостояниемсистемы).Припредставленииповедениясистемы
деревьями вычислений требование жизнеспособности должно быть разде-
лено на два подкласса — когда состояние, удовлетворяющее заданному
свойству, достижимо на каждой ветви дерева вычислений системы (∀-
жизнеспособность) и когда оно достижимо хотя бы на одной ветви дерева
вычислений (∃-жизнеспособность) . Три вышеописанные базовые свойства
поведения,которыеисследуеттеорияреактивныхсистем,представленына
рисунке 3.
Спецификацию требований к поведению системы удобно задавать фор-
мулами темпоральной логики
4
.
Термами (атомами) темпоральной логики являются предикаты, кото-
рые на отдельных состояниях системы принимают значения ”истина”или
”ложь”. Ими могут являться формулы счисления предикатов первого по-
рядка, включающие стандартные операции отношения над целыми числа-
4
Расширение математической логики, представляющее собой специальный математический аппарат
для доказательства теорем верификации [11], [12].

ми. Темпоральная формула конструируется из термов с применением так
называемых темпоральных операторов и описывает в виде функций и пре-
дикатовнадмножествомпеременныхсистемысвойстваотдельногосостоя-
ния, отдельного вычисления и множества (возможно бесконечного) вычис-
лений в целом. Базовыми темпоральнымиоператорамиявляются оператор
(”Next”) и операторU(”Until”). Одноместный оператор ”Next”позволяет
описатьсвойствонепосредственноследующегосостояниявычисления,дву-
местный оператор ”Until”описывает длительность истинности некоторого
свойства (первого операнда) относительно некоторого другого свойства
(второго операнда). Для деревьев вычислений вводятся также два базо-
выхоператора —∃ (”длянекоторогопутивдеревевычислений”)и∀ (”для
всех путей в дереве вычислений”).
Вводится отношение истинности ”|=”формулы ϕ в состоянии i, вычис-
ления σ длины|σ| (0≤i<|σ|):
(σ,i)|=ϕ
и отношение истинности формулы над вычислением:
σ|=ϕ ⇔ (σ,0)|=ϕ
Пусть q,p – термы, s
i
– некоторое состояние траектории σ длины|σ|.
Семантика базовых темпоральных операторов следующая:
 (Next) (σ,i)|=q ⇔ i+1<|σ|∧(σ,i+1)|=q
U (Until) (σ,i)|=pUq ⇔ ∀k(i≤k<|σ|) :
h
(σ,k)|=p∨∃j(i≤j≤k) : (σ,j)|=q
i
Для деревьев вычислений семантика оператораU следующая:
f
1
∃Uf
2
(∃-Until) ⇔ f
1
Uf
2
— по некоторому пути дерева вычислений
f
1
∀Uf
2
] (∀-Until) ⇔ f
1
Uf
2
— по всем путям дерева вычислений
Три базовые свойства, изображенные на рисунке 3, описываются тем-
поральными формулами, использующими дополнительные темпоральные
операторы:
 (“Всегда”)  p =pUFalse
∀♦(“Когда-нибудь всюду”) ∀♦q =¬ ¬q— по всем путям
∃♦(“Когда-нибудь где-то”) ∃♦q =¬ ¬q— по некоторому пути
Для спецификации требований к поведению систем реального времени
используетсятемпоральнаялогикареальноговремени,вкоторойнаступле-

ние любого события (и соответственно, базовые темпоральные операторы)
имеет конкретные временные рамки, например:
♦
[l;u]
p
гдеl,u∈R
≥
–нижняяиверхняявременныеграницынаступлениясобытия
p.
2.3. Верификация реактивных систем
Среди задач моделирования и анализа, которыми занимается теория реак-
тивных систем выделяются направление верификации (разработка аксио-
матической базы и автоматических алгоритмов для проведения качествен-
ного анализа поведения реактивных систем), разработка автоматических
синтезирующих алгоритмов (направление, которое соответствует теории
абстрактной реализации в классической теории систем), разработка ал-
горитмов построения замкнутого представления глобального поведения
дляпараллельныхираспределенныхсистемисистемреальноговремени,а
также разработка автоматических алгоритмов для решения задач анализа
и параметрического синтеза в системах реального времени.
Верификацией называется доказательство истинности некоторого тре-
бования к поведению на некоторой вычислительной модели реактивной си-
стемызаограниченноевремя.Верифицироватьреактивныесистемыневоз-
можно путем тестирования, так как количество возможных вариантов ее
поведения может быть бесконечно велико.
•Теорияреактивныхсистемпредлагаетнесколькоподходовкпроблеме
верификации:
— аксиоматический подход, который предполагает представление по-
ведения системы в виде утверждений в некоторой логической системе и
формулировнутребованийкповедениюввиденекоторойтеоремы,которая
может быть доказана средствами темпоральной логики [11]
— разработка алгоритмов обхода системы переходов и проверки истин-
ности темпоральной формулы в каждой ее вершине (классические ”model
checking”алгоритмы [14],[13]). Очевидно, размер верифицируемой реактив-
ной системы при этом ограничен используемой оперативной памятью вы-
числительной машины.
—автоматическиеметодыверификации,нетребующиехранениявопе-
ративной памяти вычислительной машины всей модели реактивной систе-

мы, а подразумевающие ее построение параллельно с процессом доказа-
тельства требования к поведению, сформулированого в виде темпоральной
формулы ([30]).
• Направление разработки синтезирующих алгоритмов предполагает
построениекорректнойреализациисистемы (структурыкаждогопроцесса,
участвующего в системе, и модели связей между процессами) по правиль-
носформулированнойввидеформулытемпоральнойлогикиспецификации
требований к поведению. В классических работах по теории реактивных
систем такие алгоритмы называются ”decision procedures”(например, [13]).
• Алгоритмы параметрического синтеза для дискретных систем реаль-
ноговременипозволяютпроводитьоценкуобластивременныхпараметров
(задержек) в системе, гарантирующих заданное свойство ее поведения [7].
Специфицирующие формализмы и классические алгоритмы верифика-
ции реактивных систем можно найти, например, в работах [19],[20],[14].
3. Гибридные системы
Гибридное направление вслед за дискретными системами реального вре-
мени олицетворяет развитие идеи применения методов теории реактивных
систем к непрерывным процессам реального мира.
Cледует отметить, что поведение всякой динамической системы мо-
жет быть аппроксимировано (c определенной степенью точности) кусочно-
постоянной функцией и, следовательно, любая динамическая система мо-
жет быть представлена системой переходов, которая является одной из ба-
зовыхматематичесмкихмоделейтеорииреактивныхсистем.Возможность
построениясистемыпереходов,отражающейкачественноеповедениедина-
мической системы, говорит о том, что применение методов теории реак-
тивных систем в задачах моделирования и анализа динамических систем,
вообще говоря, имеет смысл.
Гибридной системой в теории реактивных систем называется система,
которая в классических задачах моделирования и анализа называлась бы
непрерывно–дискретной или событийно–управляемой, [4], [6].
К классу гибридных систем можно отнести сложные системы управле-
ния. В качестве примера можно привести систему космического слежения,
состоящую из нескольких папаллельно работающих (и при необходимости

заменяющих друг друга) локаторов, каждый из которых является дина-
мической подсистемой. В такой системе управления появление объекта в
области видимости некоторого локатора является событием, определяю-
щим его динамику на период слежения. Основным требованием к такой
системе управления, очевидно, является надежность работы всей систе-
мы при возможных отказах отдельных подсистем и максимальное коли-
чество одновременно ведомых объектов. Произвольность траектории ведо-
мого объекта и момента его появления, возможность отказов отдельных
элементов делает систему событийно-управляемой и усложняет процесс ее
моделирования и анализа. Аналогичным примером может служить систе-
ма управления наблюдениями на радителескопах сложной структуры (на-
пример, на РАТАН-600), позволяющих наблюдать параллельно несколько
небесныхобъектовиизменяющихпрограммунаблюденийпонаступлению
разногородасобытий(измененияпогодныхусловий,наступлениянебесных
событий, например затмения, отказа записывающих устройств).
Спецификаподобныхсистемзаключаетсясоднойстороны,всложности
динамики каждого элемента системы (процесс слежения за объектом или
наблюдательный эксперимент), а с другой — в возможности возникнове-
ния разного рода событий, которые по-разному в зависимости от момента
их наступления мгновенно изменяют динамику элементов и структуру си-
стемы в целом.
Гибридными системами являются также транстпортные системы, на-
пример,системауправлениягородскимиперевозкамиилисистемауправле-
ния сложной железно-дорожной развязкой. В таких системах могут возни-
кать задачи разрешения тупиковых ситуаций (например, вследствие опре-
деленныхправилгородскогодвижения),которыеявляютсятипичнымидис-
кретными задачами и которые разумнее анализировать дискретными ме-
тодами, чем численным моделированием.
Более простым (с точки зрения законов динамики, но не с точки зре-
ния моделирования) примером может служить так называемая задача о
бильярде с несколькими шарами без трения (пример из [23]).
На рисунке 4 изображен упрощенный вариант игры с друмя шарами.
Играначинаетсясударапошару ”g”,которыйнаходитсявнекоторойточ-
ке (x
0
,y
0
) бильярдного стола, и продолжается до столкновения со вторым
неподвижным шаром ”ω”. В самом простом случае трение не учитывается
и считается, что шар ”g”движется по линейному закону. Событие удара
шара о стенку стола изменяет траекторию его движения, не меняя скоро-

-
6
k
k
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
....
.
.
.
.
.
.
.
.
.
.
.
.
.
.............................................
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
-
6
...........................................
 
	
y
h
y
ω
y
0
x
0
x
ω
l x
v
x
v
y
v
Рис. 4. Игра в бильярд с двумя шарами.
сти. Игрок задает начальную точку и скорость шара.
Гибридные системы обладают основными свойствами реактивных си-
стем — отсутствием терминальности, наличием проблем параллелизма и
синхронизации,поэтомукажетсяпривлекательнойпопыткаиспользования
для этих систем методов теории реактивных систем.
В качестве математической модели гибридной системы используется
система фазовых переходов, предложенная А.Пнуэли как расширение си-
стемы временных переходов. Системы фазовых переходов удобны как для
спецификации гибридной системы, так и ее елементов. Для них, как и для
системпереходов,верноутверждение,чтопереллельнаяихкомпозициябу-
дет также являться некоторой системой фазовых переходов.
Определение 3.1. Системой фазовых переходов называется следующая
система переходов [35]:
S
P
= < X , S , Θ , T >, (4)
где
X — конечное множество вещественных переменных
S — множество фаз, описанных набором локальных поведений

% 'd
6
 
  
  
  
  
 
d
?
ad
?
d 
  
 
6
 
  
  
  
 
d
?
d ...........................................
................................
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
·
.
.
.
.
.
.
.
.
.
·
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
-
Время
t
0
t
1
t
2
,t
3
t
4
t
5
6
S(t)
s
0
 
 
 
 
  ff
Локальное поведение (фаза)
 
 
  	
и смена поведения
Одновременные события
.
.
.
.
.
.
Рис. 5. Поведение гибридной системы
Θ — множество начальных фаз, описанных некоторым предикатом
над X
T — конечное множество переходов между фазами с определенными
на них совокупностями мгновенных действий над переменными X
Поведение системы фазовых переходов, фиксируемое одним последова-
тельнымнаблюдателем,представляетсяпоследовательностьюсобытийдвух
типов: событие увеличения времени внутри одной фазы с преобразовани-
ем переменных гибридной системы в соответствии с ее локальным пове-
дением (”фазовый переход”) и последующего за ним одного или несколь-
ких событий дискретного изменения фазы при фиксированном времени c
преобразованием переменных в соответствии с описанными мгновенными
действиями. (”дискретный переход”).
Пример такого поведения показан на рис.5.
Состоянием системы фазовых переходов называется пара < x,t >, x∈
X,t∈R. Оно соответствует внутренней точке некоторой фазы.
Функционирование системы фазовых переходов, как и системы времен-
ных переходов, характеризуется множеством всевозможных качественных
вычислений (нетаймированных) и соответствующим множеством всевоз-
можных ”точечных”вычислений. Каждому качественному вычислению со-

ответствует множество (пучок) точечных вычислений. В системе фазовых
переходов допускаются бесконечные цепочки состояний.
Определение 3.2. Точечным вычислением системы фазовых переходов
S
P
называется цепочка ρ
P
= (s
0
,t
0
,x
0
)(s
1
,t
1
,x
1
)...∈ (Σ×T×D)
ω
, т.ч.
a) (∀ i)(∃ !τ∈T) :τ(s
i
) =s
i+1
b)∀ i < n : t
i
≤ t
i+1
– все события происходят последовательно во
времени
c) каждый момент t
i
и значение x
i
соответствуют конкретной точ-
ке фазы i фазовой траектории гибридной системы.
На рисунке 5 точками изображено возможное точечное вычисление си-
стемы фазовых переходов.
Для спецификации требований к поведению гибридных систем может
быть использована темпоральная логика реального времени или ее расши-
рения (интервальная темпоральная логика [27], гибридная темпоральная
логика [35]). В методах автоматической верификации часто использует-
ся темпоральная логика реального времени деревьев вычислений (Timed
Computation Tree Logic), формулы которой имеют вид:
δ ::= p | l≤x≤u | ¬δ | δ
1
∨δ
2
| δ
1
∃U
]n
δ
2
| δ
1
∀U
]n
δ
2
где p – терм, x∈X, l,u∈R∪{±∞},]∈{ < ,≤ , = , > ,≥} .
Примером типичного требования к поведению гибридной системы мо-
жет служить спецификация требования в задаче о бильярде с двумя ша-
рами: ”запущенный в игру шар не может двигаться дольше периода T без
столкновения с другим шаром”, которое описывается темпоральной фор-
мулой:
♦
≤T
(x =x
w
∧y =y
w
)
Такое требование порождает задачу верификации при конкретных зна-
ченияхl,h,v
x
,v
y
,T изадачупараметрическогосинтезаT(взависимостиот
начальных скоростей шаров и размеров бильярдного стола).
4. Верификация гибридных систем.
Для гибридных систем доказано, что порождаемый ими язык, не обладает
регулярной (и даже ω–регулярной) структурой
5
, и система не может быть
5
Напомним, что язык называется регулярным, если он допускается конечным автоматом; язык назы-
вается ω-регулярным, если для его реализации может быть построен некоторый автомат, допускающий

представленавобщемслучаеконечнымавтоматом.Следовательно,методы
верификации и процедуры синтеза программ теории реактивных систем,
разработанныедлядискретныхсистем,которыемогутбытьпредставлены
в виде конечного графа состояний, не разрешимы в целом для гибридных
систем и можно говорить только о применении этих методов к отдельным
классам гибридных систем.
В этом заключается основная теоретическая проблема применения ме-
тодов верификации к гибридным системам, которую мы условно будем на-
зывать проблемой разрешимости.
Исследования в области верификации гибридных систем последних лет
можно условно разделить на три направления: выделение подклассов ги-
бридныхсистем,укоторых(бесконечное)множествосостоянийможетбыть
разбито каким-либо образом на конечное число классов эквивалентности
относительно верифицируемого требования к поведению (выделение под-
классов требований) и применение к ним известных полностью разреши-
мых методов верификации реактивных систем ( это направление услов-
ноназовем ”реактивнымнаправлением”);выделениеподклассовгибридных
систем и требований к поведению, для которых невозможно решить про-
блему достижимости, доказательство невозможности применения методов
верификации для этих систем (условно ”пессимистическое направление”);
и,наконец,разработкаполуразрешимыхметодовверификациидлягибрид-
ных систем. К достижениям последнего направления (которое мы назвали
бы ”динамическим направлением”) относятся появление гибридного авто-
матаигибриднойтемпоральнойлогики,пополнениедедуктивногоаксиома-
тического подхода правилами вывода, отражающими динамические свой-
ства гибридных систем
6
, а также автоматический метод символьной вери-
фикациииметодинтегрирующихграфов.Двапоследнихметодапоявились
независимов 1993-94годахипредставляютособыйинтерес,посколькуони
отражаюттенденциипоследнихлетвобластикомпьютерногомоделирова-
ния гибридных систем.
Ниже представлен cначала краткий обзор первых двух направлений, а
затем подробно рассмотрены автоматические методы динамического на-
правления, которые выделены в отдельные подразделы.
бесконечныецепочкииобладающийсвойствомInf(σ)∪F6=0,гдеInf(σ)={s∈Σ,т.ч.∀m∈N,∃n>m:
σ
n
= s} – множество вершин, посещаемых бесконечное число раз, F – терминальные вершины автомата
(такой автомат называется Buchi-автоматом) [40].
6
Расширение аксиоматической базы для гибридных автоматов и описание гибридной темпоральной
логики (логикиописаниятребованийкповедениюгибридныхавтоматов)можнонайтивработах [21],[35].

Взависимостиотметодовверификации,которыеиспользуютсяввыше-
описанных направлениях, предлагаются различные варианты представле-
ния математической модели системы фазовых переходов, в которых более
конкретно определяются те или иные элементы гибридной системы (необ-
ходимыедляприменениясоответствующихметодов).Здесьнасинтересует
вариант модели системы фазовых переходов, используемый в автоматиче-
ских методах верификации и называемый гибридным автоматом [9],[21].
Определение 4.1. Гибридным автоматом называется следующая кон-
струкция:
H =
n
S , X , E , F , b , ψ , f
o
, (5)
где
S — конечное множество локаций (вершины автомата)
X — конечное множество вещественных переменных
E —конечноемножестводуг.Любаядугапомеченаусловиемперехода
b, формулой преобразования переменных на дуге f, и буквой алфавита
событий a∈ Σ
F — оператор локального поведения внутри каждой локации (систе-
ма дифференциальных включений, дифференциальных уравнений или набор
вещественных непрерывных функций)
ψ — множество предикатов над X, описывающих области значений
переменных X в каждой локации (предикаты–инварианты)
В общем случае предикаты b,ψ имеют вид линейных неравенств:
Σ
n
i=1
a
i
x
i
∼c, x
i
∈X,a
i
,c∈Q,∼={<,>,=,6=,≤,≥} (6)
Каждая локация автомата может представлять из себя гибридный ав-
томат (вложенность), а параллельная композиция гибридных автоматов
будет также являться гибридным автоматом.
Наиболее подходящими для применения к гибридным системам счи-
таются две основные вычислительные модели систем реального времени
— система временных переходов (опр. 2.3) и модель таймированного ав-
томата (опр. 2.5). Для таймированного автомата существуют полностью

разрешимые методы атвоматической верификации свойств, описанных на
языкетемпоральнойлогикиреальноговремени (алгоритмысимвольнойве-
рификации [22]). Для системы временных переходов разработаны автома-
тические алгоритмы обхода для верификации свойств, описанных на язы-
ке линейной темпоральной логики [30], [14], процедуры автоматического
синтеза системы переходов по спецификации системы, описанной на языке
темпоральной логики деревьев траекторий [13], имеются алгоритмы по-
строения замкнутого представления параллельной композиции временных
систем переходов [7]. Система временных переходов используется также в
аксиоматическом подходе [9].
Поэтомуосновнойзадачейреактивногонаправленияявляетсяпоисквоз-
можных способов корректного приведения гибридного автомата к этим
двум вычислительным моделям, для чего необходимо найти возможные
способы перехода к конечному пространству состояний, при которых не
нарушалась бы семантика верифицируемых свойств.
Заметим,чтопространствосостоянийгибридногоавтоматаможетбыть
описанотройкойψ×F×R
N
,гдеψ –множествоинвариантов,F –множество
его локальных поведений, а R
N
– пространство векторов начальных зна-
чений переменных, описываемых оператором инициализации f. Поскольку
ψ,F – конечные множества, то основной задачей является поиск конечного
разбиения пространства векторов начальных значений переменных R
N
.
Наиболее распостраненный способ перехода к конечному пространству
состояний – это наложение сетки на ограниченном сверху и снизу по всем
базисным компонентам подмножестве R
N
.
Действительно,обозначивчерезL
i
,U
i
минимальноеимаксимальноеце-
лые значения компоненты x
i
вектора переменных X, участвующие во всех
предикатах гибридной системы, а через{<},{>} – множества всех значе-
ний компоненты, меньших L
i
и больших U
i
соответственно, можно нало-
жить сетку на множество значений каждой компоненты и получить для
каждой компоненты конечное множество состояний (шаг сетки Δ выби-
рается в соответствии с локальными поведениями таким образом, чтобы
иметь целое число шагов для всех компонент вектора X во всех локациях
автомата):
Γ
i
={<} ∨ { L
i
, L
i
+Δ , ... , U
i
} ∨ {>}
Для гибридного автомата строится система переходов, в которой все
состояния, характеризующиеся нахождением вектора X в одной клетке Δ-
сетки,считаютсяэквивалентнымииобъединяютсяводносостояние.Такая

система переходов будет иметь конечное число состояний
Q = Ψ×Γ
1
×...×Γ
n
Дискретизацияфазовогопространстваэтимспособомвозможнадляги-
бридных автоматов, у которых:
a) локальные поведения описываются линейными дифференциальными
уравнениями или включениями первого порядка c целочисленными коэф-
фициентами
b) предикаты b и ψ имеют вид:
x
i
∼c | ¬δ | δ
1
∨δ
2
, ∼∈{≤,≥}, c∈Z
(возможно сравнение значений компонент с целыми числами)
c)операторпреобразованияпеременныхf описываетсяцелочисленными
интервалами:
f ={ x :=λ∈ [α;β], α,β∈Z}
Таким образом, для этого подкласса гибридных систем проблема верифи-
кации разрешима (подробнее см [31],[32]).
Другойспособконечногоразбиенияпространствасостоянийгибридного
автомата иллюстрирует определение отношения эквивалентности на про-
странствеR
N
,предложенноевработе[36]Предикатыгибридногоавтомата
в этом случае могут иметь более сложный вид:
x
i
∼c | x
i
−x
j
∼c | ¬δ | δ
1
∨δ
2
, ∼∈{≤,≥}, c∈Z
(возможно сравнение значений двух компонент друг с другом)
Пусть L
i
,U
i
∈Z — минимальное и максимальное значения непрерывой
компоненты x
i
, участвующие в предикатах системы.
Говорят, что два вектора x,x
0
∈ R
N
эквивалентны, и пишут x ≈ x
0
,
если у них:
• присутствуют недостижимые снизу компоненты
∃i,j,x
i
<L
i
,x
0
j
<L
j
• или равные целые части и одинаковый относительный порядок дроб-
ных частей:
∀i,x
i
≥L
i
,∀i,j:
либо x
i
>U
i
∧x
0
i
>U
i
либо x
i
≤U
i
∧x
0
i
≤U
i
∧int(x
i
) =int(x
0
i
)∧
fract(x
i
)≤fract(x
j
) если и только если fract(x
0
i
)≤fract(x
0
j
)

Классэквивалентностидлявектораxобозначаетсякак [x]иназывается
“timer region”, а получаемый таким образом новый автомат называется
TimerRegionAutomaton.Введенноеотношениеэквивалентности,очевидно,
порождает конечное разбиение R
N
.
Построение Timer Region Automaton возможно для узкого класса ги-
бридных систем, которые называются условно ”зависающим автоматом”
7
.
Для этого подкласса проблема верификации также разрешима.
Отдельно в реактивном направлении выделяется класс линейных ги-
бридных автоматов, к которым возможно применение методов верифика-
ции таймированного автомата.
Определение 4.2. Гибридный автомат, у которого предикатыb,ψ име-
ют вид линейных неравенств, оператор преобразования переменных на
дугахf представляетсяцелочисленныминтервалом{x :=λ∈ [α;β], α,β∈
Z∪{±∞}} и переменные X меняются в каждой локации s по закону
dX/dt = Λt, где Λ∈ [A
s
,B
s
],A
s
,B
s
∈ Z называется линейным гибридным
автоматом.
Определение 4.3. Линейный гибридный автомат называется линейным
гибридныматвтоматомспостояннымикоэффициентами (Constant Slope
Hybrid System), если A
s
=B
s
для любой локации s∈S.
Линейные гибридные автоматы с постоянными коэффициентами при
наложении определенных ограничений
8
, приводятся к модели таймирован-
ного автомата с помощью двойного преобразования ([32]):
Для∀s∈S определяется векторная функция k
s
:
k
s
(X) =
K
A
s
X + C
s
, где
7
Зависающим автоматом называется гибридный автомат, у которого:
a) если R
s
– вектор производных множества переменных X в вершине s, то любая его компонента
r
s
i
={0,1}
b) оператор преобразования переменных f имеет вид
f ={ x
i
:=0;x
i
:=x
i
−c,c∈Z∪{±∞}}
c) разрешается использование предикатов вида:
x
i
∼c | x
i
−x
j
∼c | ¬δ | δ
1
∨δ
2
, где∼∈{<,>,=,≤,≥},c∈Z
d) для каждой комноненты x
i
∈ X существуют абсолютные значения нижней и верхней границы ее
изменения K
1
i
,K
2
i
, такие что как только x
i
≥ K
2
i
(x
i
≤ K
1
i
), так x
i
уже больше не уменьшается (не
увеличивается) и не входит ни в какие предикаты вида x
i
−x
j
∼c
8
а именно: 1) при детерминированности начальных значений X в каждой локации системы; 2)∀x∈
X,∀s ∈ S : x
.
6= 0, то есть A
s
,B
s
одного знака; 3)∀s ∈ S if x
.
= A
s
(x) > 0 → l
x
- конечно,
if x
.
=A
s
(x)<0→u
x
- конечно .

K = LCM{abs(A
s
(x))| s∈S,x∈X} – наименьший общий множитель
(масштабирование по x)
и вектор C
s
(сдвиг осей, чтобы в любой локации было бы α,β,l,u≥ 0):
C
s
(x) =max{abs(l
x
),abs(u
x
),abs(α),abs(β)}
n
K
A
s
(x)
o
Затем производится замена переменных X
0
=k
s
(X)
x
0
=
K
A
s
x+C
s
=
K
A
s
(x
0
+A
s
t)+C
s
=x
0
0
+Kt, где x
0
0
=
K
A
s
x
0
+C
s
и всех значений α,β,l,u, фигурирующих в предикатах и начальных
условиях системы l→l
0
, u→u
0
, α→α
0
, β→β
0
,
l
0
=
K
A
s
(x)
l+C
s
(x) < x
0
<
K
A
s
(x)
u+C
s
(x) =u
0
для A
s
> 0 (A
s
< 0−u
0
<x
0
<l
0
)
x
0
:= [α
0
,β
0
] = [
K
A
s
(x)
α+C
s
(x);
K
A
s
(x)
β +C
s
(x)]
для A
s
> 0 (A
s
< 0−x
0
:= [β
0
;α
0
])
Сконструированный таким образом гибридый автомат H
K
обладает
двумя важными новыми свойствами: 1) все переменные≥ 0; 2)∀s∈ S :
dX/dt = K – одинаковый закон изменения. Такой автомат называется ”K-
таймированным автоматом.
Формулы темпоральной логики реального времени деревьев траекто-
рий, описывающие требования к поведению, также необходимо преобразо-
вать:
δ→|δ|
K
, где x∼c → x∼c
0
Для перехода ”Kтаймированного автомата к таймированному автомату
(H
K
→H
1
) достаточно изменить масштаб времени, то есть преобразовать
законы изменения переменных:
X =X
0
+Kt → X =X
0
+t
и все временные ограничения в темпоральных формулах|δ|
K
:
]n→]Kn (соответственно|δ|
K
→ ||δ|
K
| 1
K
)
Можно показать, что∀H∈CSHS
6=0
и δ∈TCTL будет:
H|=δ iff H
K
|=|δ|
K
.
и для∀H∈CSHS
6=0
и δ∈TCTL:
H|=δ iff H
1
|=||δ|
K
| 1
K
.
Следует отметить, что для линейного гибридного автомата общего ви-
даневозможнопостроитьэквивалентныйH
K
и,следовательно,методыав-
томатической верификации таймированного автомата к нему в целом не
подходят. Однако, при наличии определенных условий, для него возможно
построение модели, подобной H
K
. При этом возможна верификация ме-

тодами таймированного автомата подмножества ”неизбежных”(∀) формул
логикиреальноговременидеревьевтраекторий,причемгарантируетсядо-
казательство только свойств системы, имеющих результат верификации
”истина”.
Работы,которыемыотнесликпессимистическомунаправлению,посвя-
щеныдоказательствунеразрешимостизадачиверификациидляотдельных
классов гибридных систем. Доказательство основывается на невозможно-
сти для определенных подклассов гибридных автоматов положительного
решения проблемы достижимости:
Определение 4.4. Проблемой P(oint)-достижимостивдинамическойси-
стеменазываетсяследующаязадача: ”длядвухточек x,x’∈X существу-
ет ли траектория ξ, т.ч. ξ(0) = x и ξ(t) = x
0
?”
Проблемой R(egion)-достижимостиназываетсяследующаязадача: ”для
двух выпуклых многогранников P,P
0
⊆ X существуют ли такие точки
x∈P,x
0
∈P
0
, для которых проблема P-достижимости была бы разреше-
на положительно?”.
Вработе [33]приводитсядоказательствоэквивалентности 2-x-стекового
автомата (и,следовательно,любоймашиныТьюринга)игибридногоавто-
матаскусочно-постояннымипроизводными
9
размерности 3.Этоозначает,
что проблема достижимости эквивалентна проблеме остановки машины
Тьюрингаинеможетбытьрешенадляэтогоклассагибридныхавтоматов
с более чем двумя переменными
10
.
Аналогично, эквивалентность N-счетной машины, для которой задача
остановки неразрешима, и линейного гибридного автомата с постоянными
коэффициентами, имеющего более 2 переменных, доказывает неразреши-
мость проблемы достижимости и для этого класса гибридных автоматов
(причемдажедлятех,вкоторыхприсутствуютсамыепростыепредикаты
x = 0 и x6= 0). Доказательство эквивалентности можно найти в работе
[25].
9
Гибридный автомат с кусочно-постоянными производными есть модель динамической системы, у
которой траектории являются ломаными линиями, то есть являются решением уравнения
dx
dt
=f(X), где
f :X→X – (возможночастичная)фукнция,такаячто f ={c},c∈X –множествовекторови∀c, f
−1
(c)
есть конечное объединение выпуклых многогранников.
10
автоматы с кусочно-постоянными производными размерности 2 представляют собой модели планар-
ных систем, для которых проблема достижимости полностью решена, подробно см. в [33]

4.1. Символьная верификация для гибридных систем
Методсимвольнойверификациибылпредложенв 1992году [20]вкачестве
автоматическогоалгоритмаверификациидлядискретныхсистемреально-
го времени, специфицированных вычислителной моделью таймированного
автомата. Разработанный на базе технологии символьных вычислений, он
оказался очень привлекательным для гибридного направления. В работах
по верификации систем реального времени он фигурирует под названием
”алгоритм Кроноса”[22].
Основнойидеейметодасимвольнойверификацииявляетсяотказотвре-
мени как особой, первостепенной переменной, определяющей события сме-
ны состояний в реактивной системе. Время уходит из точечных вычисле-
ний и становится простой переменной, которая наравне с прочими может
участвовать в предикатах и в требованиях к поведению системы.
Метод символьной верификации содержит алгоритм, с помощью кото-
рого можно получить (в виде некоторого предиката над переменными X)
область пространства состояний системы переходов, достижимых из мно-
жества ее начальных состояний (описанных некоторым предикатом над
X) в процессе функционирования или же определить (в виде предиката
надX) множество начальных состояний, приводящих систему переходов в
требуемые состояния (заданные предикатом над X).
Длительность фаз в системе фазовых переходов описывается новым ти-
пом предиката, введенного в определение гибридного автомата вместо ин-
варианта локации ψ, — так называемого ”предиката возможности увели-
чения времени в локации, time can progress predicate”(tcp-предикат). Он
оказывается удобным для спецификации различных политик синхрониза-
ции в гибридной системе (подробнее см ниже или в [23]) и необходим для
преобразования гибридных требований в требования реального времени с
целью применения метода символьной верификации.
Гибридный автомат (см. опр. 4.1) при таком подходе называется tcp-
автоматом, в нем инварианты ψ заменены на предикаты вида
tcp:S×[D×R
≥
]→{true;false} —предикатвозможностилокального
увеличения времени, обладающие свойствами:
1. tcp
s
[X
0
](0) =true;
2. tcp
s
[X
0
](t)⇒∀t
0
≤t tcp
s
[X
0
](t
0
) =true
(tcp
s
[X
0
](t)означает,чтоеслипривходевлокациюsзначениеперемен-

ных было X
0
, то в этой локации возможно находиться t единиц времени)
алокальныеповеденияF описываютсяаналитическимифункциями (функ-
циями эволюции) ϕ :S×[D×R
≥
]→D, которые обладают свойствами:
3. ϕ
s
[X
0
](0) =X
0
;
4. ϕ
s
[X
0
](t+t
0
) =ϕ
s
[ϕ
s
[X
0
](t)](t
0
).
Важно заметить, что определение tcp-автомата и метод символьной ве-
рификацииоперируютсабстрактнымпредикатом tcp,неуточняяегокон-
кретный вид. Тем самым достигается универсальность метода для систем
с различной политикой синхронизации параллельных процессов в систе-
ме, так как предикат tcp определяет эту политику. Действительно, пусть
P =
W
i
b
i
(b
i
– предикаты на дугах автомата, выходящих из локации s) и
пусть ϕ
s
(X
0
)(t) – значение функции локального поведения в локации s в
момент t при начальных уcловиях X
0
.
Варианты предиката tcp
s
(X)(t):
tcp
s
(X)(t)≡∃t
0
≥t P(ϕ
s
(X
0
)(t
0
))∨(∀t
0
¬P(ϕ
s
(X
0
)(t
0
))) (7)
—истиненмаксивальновозможноевремяпребываниявлокацииs,”пока
хотя бы один переход еще возможен”(асинхронная политика)
tcp
s
(X)(t)≡∀t
0
≤t ¬P(ϕ
s
(X
0
)(t
0
)) (8)
— истинен минимально возможное время пребывания в локации s, ”до
первого возможного перехода”(синхронизирующая политика)
tcp
s
(X)(t)≡
^
i
∀t
0
≤t b
i
(ϕ
s
(X
0
)(t
0
))∨(∀t
00
≤t
0
¬b
i
(ϕ
s
(X
0
)(t
00
))) (9)
—истинендопервогоотказакакого-нибудьпереходаизлокацииs, ”по-
ка все еще возможны”(intermediate политика)
Поведениеtcp-автомата,фиксируемогооднимпоследовательнымнаблю-
дателем,представляетсяпоследовательностьючередующихсяпереходовдвух
типов:
мгновенное изменение значений переменных и дискретный переход по
дуге tcp-автомата

s →
a,b,f
s
0
, b(X
0
)
(s,X
0
> →
a
(s
0
,f(X
0
)
(10)
изменение значения переменных внутри локации s с увеличением вре-
мени на t:
tcp
s
[X
0
](t)
(s,X
0
> →
t
(s,ϕ
s
[X
0
](t))
(11)
Вычислением tcp-автомата является последовательность пар
(s
0
,X
0
)(s
1
,X
1
)...(s
n
,X
n
)... , т.ч.
a) (s
i
,X
i
>→
t
i
(s
i
,X
0
i
>→
a
i
(s
i+1
,X
i+1
) или
b) (s
i
,X
i
>→
a
i
(s
i+1
,X
i+1
)
Для верификации некоторого требования корректности, описанного с
помощью формулы темпоральной логики, необходимо определить систему
переходов для исследуемой гибриднойсистемы, применить кнейалгоритм
построения множества достижимых состояний и далее решить систему
линейных неравенств, состоящую из неравенств, входящих в отрицание
предиката требования корректности и в предикат достижимых состояний
[прямой метод]. Алгоритм построения начальных состояний, приводящих
системупереходоввтребуемыесостоянияпозволяетрешатьнекоторыеза-
дачи параметрического синтеза гибридных систем [обратный метод].
ПустьP некоторый(нетемпоральный)предикатнадX,s∈S –локация
tcp-автомата.
Вводятся два новых предиката:
− →
P
s
(X) ≡ ∃X
0
,∃t P(X
0
) ∧ tcp
s
[X
0
](t) ∧ ϕ
s
[X
0
](t)
− →
P
s
(X)характеризуетмножествосостояний,достижимыхизсостояния,
на котором истинен предикат P, на момент ухода из локации s.
post
e
[P](X) ≡ ∃X
0
P(X
0
) ∧ b(X
0
) ∧ X =f(X
0
)
post
e
[P](X) характеризует множество состояний, достижимых из со-
стояния,накоторомистиненпредикатP,придискретномпереходеподуге
e tcp-автомата.
Для любого предиката P
0
можно составить символьное вычисление си-
стемы переходов:
(s
0
,P
0
)(s
1
,P
1
)...(s
i
,P
i
)...

где для∀i≥ 0 существует дуга e
i
:s
i
→s
i+1
и P
i+1
= post
e
i
[
− →
P
i
s
i
].
Этозначит,чтовозможнопроследитьпоследовательное”развитие”предиката,
определенногодлянекоторойлокациинаначинающемсявэтойлокациивы-
числении.
Пусть I = (I
1
,... ,I
m
) — набор предикатов, характеризующих началь-
ные состояния для каждой локации. (для локаций, которые являются на-
чальными, I
i
– начальный предикат над X, для всех других, I
i
≡false).
Теорема 4.1.1. Итерационный алгоритм прямого метода. Множе-
ство глобальных состояний гибридного автомата, достижимых из I ,
характеризуется набором предикатов P = (P
1
,... ,P
m
), где каждый P
i
соответствует локации s
i
и является наименьшей устойчивой форму-
лой следующего итерационного процесса:
P
k
=
−−−−−−−−−−−→
I
k
∨
_
j
post
e
[P
j
]
s
k
(12)
Этот метод называется прямым методом символьной верификации и
может быть использован для решения проблем достижимости и для дока-
зательстватребованийкорректностивгибридныхсистемах,специфициро-
ванных с помощью формул счисления предикатов первого порядка. Требо-
вание корректностиP будетвыполняться,еслипредикат¬P недостижим
из множества начальных предикатов. То есть, если S – устойчивое реше-
ниеописанныхвышеуравнений,товерификациятребованиякорректности
сводится к доказательству, что S∧¬P =false.
Обратный метод предполагает введение двух предикатов, аналогичных
введенным для прямого метода:
← −
P
s
(X) =∃ttcp
s
(X)(t)∧P(ϕ
s
(X)(t))
← −
P
s
(X)характеризуетмножествосостояний,изкоторыхдостижимоте-
кущее состояние P внутри локации s.
pre
e
P(X) =b(X)∧P(f(X))
pre
e
[P](X)характеризуетмножествосостояний,изкоторыхдостижимо
текущее состояние P при дискретном переходе по дуге e.
Любой (не темпоральный) предикат P, который предполагается вери-
фицировать,можнопредставитьнаборомпредикатов (P
1
,... ,P
m
),каждый
из которых соответствует своей локации гибридного автомата.

Теорема 4.1.2. Итерационныйалгоритмобратногометода.Длямно-
жества глобальных состояний гибридного автомата, описанных некото-
рым предикатом R ={R
1
,... ,R
m
}, (R
i
— целевой предикат
11
локации
s
i
), множество предшествующих состояний, из которых достижимы со-
стояния R, характеризуется предикатом S =
W
m
k=1
P
k
, где каждый P
i
соответствует локации s
i
и является наименьшей устойчивой форму-
лой следующего итерационного процесса:
P
k
=
←−−−−−−−−−−−
R
k
∨
_
j
pre
e
[P
j
]
s
k
(13)
Требование корректности P будет выполняться на гибридном автома-
те, если предикат R =¬P достижим из множества состояний, описанных
предикатом S =
W
m
k=1
P
k
, и множество начальных состояний гибридного
автоматаI непересекаетсясэтиммножеством.Такимобразом,верифика-
циятребованиякорректностисводитсякдоказательству,чтоS∧I =false,
то есть к решению некоторой системы линейных неравенств.
Метод символьной верификации может быть реализован как model-che-
cking алгоритм [23], если ввести в темпоральную логику бинарный опера-
тор ”next”., характеризующий темпоральные производные предикатов на
множестве непосредственных наследников текущего состояния:
(P
0
.P )(X)≡∃e,∃t(pre
e
[P]∨P)(ϕ
s
[X](t))∧
(tcp
l
[X](t)∧∀t
0
≤t(P
0
∨P)(ϕ
l
[X](t
0
))
где P,P
0
– темпоральные формулы, предикат (P
0
.P )(X) описывает
множествосостояний,изкоторыхможнопопастьвсостояниеP(X)заодин
шаг (путешествуявнекоторойлокацииизатемподискретномупереходу).
Ниже приведены итерационные правила вычисления достижимых со-
стояний гибридного автомата для темпоральных предикатов, использую-
щие характеристические множества термов, полученные прямым методом
[здесь∼∈{<,≤,=,≥,>].
Характеристическое множество формулы φ
1
∃U
∼n
φ
2
есть
W
i
P
i
(0),
где:
• P
0
(z)≡z∼n∧φ
2
•∀i≥ 0, P
i+1
(z) =P
i
(z)∨φ
1
.P
i
(z)
Характеристическое множество формулы φ есть
V
i
P
i
, где:
11
например, если проверяется достижимость локации i, то R
i
≡l =i,R
j
≡false

• P
0
≡φ
•∀i≥ 0, P
i+1
=P
i
∧¬(true.¬P
i
)
Характеристическое множество формулы∀♦
∼n
φ есть¬
W
i
P
i
(0),
где:
• P
0
(z)≡z∼n
•∀i≥ 0, P
i+1
(z) =P
i
(z)∨¬φ.P
i
(z)
Автоматическая символьная верификация используется для гибридных
автоматов с линейными предикатами общего вида
_
k
^
j
Σ
i
a
ij
x
i
∼c, ∼∈{<,≤,=,≥,>}, a
i
,c∈Q (14)
однако, сходимость алгоритма гарантируется только для некоторых клас-
сов гибридных систем (см. сводную таблицу и пессимистическое направ-
ление).
Рассмотрим два примера символьной верификации требований к пове-
дению систем автоматического управления.
Пример 1.Системагазовойбезопасности (прямойметодсимволь-
ной верификации)
Система Gas Burner, используемая в качестве примера во многих рабо-
тахгибридногонаправления,представляетизсебятривиальную”игрушеч-
ную”с точки зрения теории управления модель динамической системы, ко-
торая, однако, оказывается удобной для ”ручной”демонстрации различных
алгоритмовверификации(вчастностипрямогометодасимвольнойверифи-
кации). Пример примечателен тем, что для него итерационный алгоритм
символьной верификации не сходится, однако он дает итерационную фор-
мулудлявсехдостижимыхсостояний,спомощьюкоторойможнодоказать
необходимое требование.
Система состоит из газового хранилища (танкера), кнопки запроса на
пользование газом и системы контроля, которая может при необходимо-
стипрекратитьилинеразрешитьочереднойсеанспользованиягазом (при
помощи клапана).
Система может находиться в двух основных состояниях: leak (клапан
открыт)и¬ leak (клапанзакрыт).Приоткрытомклапаненекотороеколи-
чество газа утекает, причем скорость утечки неизвестна, поэтому можно

контролировать только время пользования газом. Целью системы контро-
ля является недопущение критической концентрации газа в окружающей
среде. Для этого вводятся два ограничения на сеансы пользования газом:
1. каждый сеанс не должен продолжаться дольше n единицы времени
2.интервалвременимеждудвумяпоследовательнымисеансамидолжен
быть не менее m единиц времени.
Эти ограничения определяют моменты наступления событий перехо-
да из одного состояния системы в другое. Требование к поведению систе-
мы Gas Burner формулируется следующим образом (требование коррект-
ности):
”Суммарная длительность сеансов пользования газом для интервалов
наблюдения больших некоторого времени (k единиц времени) не должна
превышать 5 процентов общего времени, независимо от начала наблюде-
ния.”
Прямойметодпозволяетверифицироватьтребованиекорректностипри
конкретных значениях параматров n,m,k. Пусть, например, n = 1,m =
30,k = 60. Метод состоит из следующих шагов:
• Построение гибридного автомата (рис.6). Локации 1 и 2 соответ-
ствуют основным состояниям системы, условия переходов по дугам соот-
ветствуют ограничениям 1) и 2) на поведения системы. Для верификации
требованиявсистемувводятсятривещественныепеременные,отслежива-
ющие суммарную длительность сеансов пользования (переменная y), сум-
марное время между сеансами (переменная z) и локальное время нахожде-
ния в каждой локации (переменная x).
• Вычисление для каждой локации tcp-предиката по одной из формул
(например, по формуле (7)):
tcp
1
(X)(t)≡∃t
0
≥t x
0
+t≤ 1∨x
0
> 1 =x
0
+t≤ 1
tcp
2
(X)(t)≡∃t
0
≥t x
0
+t≥ 30 =true
• Описание требования корректности (не темпоральным) предикатом:
y+z > 60⇒ 20y≤y+z (15)

'
&
$
%
'
&
$
%
x =x
0
+t
y =y
0
+t
z =z
0
x =x
0
+t
y =y
0
z =z
0
+t
-
-
 
x
0
,y
0
,z
0
:= 0
x≤ 1, x := 0
x≥ 30, x := 0
1 2
leak not leak
Рис. 6. Гибридный автомат системы контроля газовой безопасности.
• Построение достижимых состояний в виде предиката P = (P
1
,P
2
)
(P
1
описывает достижимые из локации 1 состояния, P
2
— из локации 2)
для начального предиката I = (I
1
,I
2
),I
1
≡ x = y = z = 0,I
2
≡ false по
итерационной формуле (12):
P
1
0
=
− →
I
1
1
≡∃x
0
,y
0
,z
0
,∃t
(x
0
=y
0
=z
0
= 0∧x
0
+t≤ 1∧x =x
0
+t∧y =y
0
+t) =
z = 0∧x =t∧y =x∧t≤ 1 =z = 0∧x≤ 1∧y−x = 0∧y≤ 1
P
2
0
≡false
формула преобразования i→ i+1
P
1
i
= P
1
i−1
∨
−−−−−−−→
post
21
P
2
i−1
1
P
2
i
= P
2
i−1
∨
−−−−−−−→
post
12
P
1
i−1
2
P
1
1
= P
1
0
∨
−−−−−−−−→
post
21
false
1
=P
1
0
P
2
1
= false∨
−−−−−−→
post
12
P
1
0
2
≡
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−→
∃x
0
,y
0
,z
0
(z
0
= 0∧y
0
−x
0
= 0∧x
0
≤ 1∧x = 0)
2
=
−−−−−−−−−−−−−−−−→
z
0
= 0∧y
0
≤ 1∧x = 0
2
=∃x
0
,y
0
,z
0
,t
(z
0
= 0∧y
0
≤ 1∧x
0
= 0∧x =x
0
+t∧z =z
0
+t∧y =y
0
) =
z−x = 0∧y≤ 1
P
2
2
= P
2
1
∨
−−−−−−→
post
12
P
1
1
2
=P
2
1
∨
−−−−−−→
post
12
P
1
0
2
=P
2
1

P
1
2
= P
1
1
∨
−−−−−−→
post
21
P
2
1
1
≡ (z = 0∧x≤ 1∧y−x = 0∧y≤ 1)∨
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−→
∃x
0
,y
0
,z
0
(z
0
−x
0
= 0∧y
0
≤ 1∧x
0
≥ 30∧x = 0)
1
=
(z = 0∧x≤ 1∧y−x = 0∧y≤ 1)∨
−−−−−−−−−−−−−−−−−→
z
0
≥ 30∧y
0
≤ 1∧x = 0
1
=
∃x
0
,y
0
,z
0
,t(z
0
≥ 30∧y
0
≤ 1∧x
0
= 0∧x
0
+t≤ 1∧x =x
0
+t∧z =z
0
∧y =y
0
+t) = [z = 0∧x≤ 1∧y−x = 0∧y≤ 1]∨[x≤ 1∧z≥ 30∧y−x≤ 2]
P
1
3
= P
1
2
∨
−−−−−−→
post
21
P
2
2
2
=P
1
2
∨
−−−−−−→
post
21
P
2
1
2
=P
1
2
P
2
3
= P
2
2
∨
−−−−−−→
post
12
P
1
2
2
≡ (z−x = 0∧y≤ 1)∨
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−→
∃x
0
,y
0
,z
0
([z
0
= 0∧x
0
≤ 1∧y
0
−x
0
= 0∧y
0
≤ 1]∨
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−→
[x
0
≤ 1∧z
0
≥ 30∧y
0
−x
0
≤ 1]∧x
0
≤ 1∧x = 0
2
= (z−x = 0∧y≤ 1)∨
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−→
[z
0
= 0∧x = 0∧y
0
−x
0
= 0∧x
0
≤ 1∧y
0
≤ 1]∨
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−→
[x
0
≤ 1∧z
0
≥ 30∧y
0
−x
0
≤ 1∧x = 0]
1
= (z−x = 0∧y≤ 1)∨
∃x
0
,y
0
,z
0
,t([z
0
= 0∧x
0
= 0∧y
0
−x
0
= 0∧x
0
≤ 1∧y
0
≤ 1]∨
[x
0
≤ 1∧z
0
≥ 30∧y
0
−x
0
≤ 1∧x
0
= 0])∧(x =x
0
+t∧z =z
0
+t∧y =y
0
) =
(z−x = 0∧y≤ 1)∨(z−x≥ 30∧y≤ 2)
Таким образом, получаем итерационную формулу для достижимых состо-
яний:
P
1
n
=P
1
n−1
— n – нечетное
P
1
n
=P
1
n−1
∨x≤ 1∧y−x≤n∧z≥ 30n — n – четное
P
2
n
=P
2
n−1
— n – четное
P
2
n
=P
2
n−1
∨y≤n−1∧z−x≥ 30(n−2) — n – нечетное
Общий вид предиката, характеризующего достижимые состояния:
S ≡ [x≤ 1∧y =x∧z = 0∨∃n≥ 1(x≤ 1∧y−x≤n∧30n≤z)]
∨
[y≤ 1∧z =x∨∃n≥ 1(y≤n+1∧30n≤z−x)]
• Верификация требования — поскольку
S∧¬(y+z > 60⇒ 20y≤y+z) =false
то система удовлетворяет требованию (15) корректности.
Пример 2. Система температурного контроля атомного реактора
(обратный метод символьной верификации)

Система температурного контроля атомного реактора состоит из дат-
чикатемпературывкотлереактораидвухнезависимыхподвижныхстерж-
ней, с помощью которых реактор может охлаждаться. Целью системы яв-
ляется поддержание температуры в реакторе в пределах между θ
m
и θ
M
.
При достижении критического значения θ
M
, котел должен быть охлажден
однимизстержней.Приэтомиспользованиекаждогостержнявозможноне
чащечемчерезT единицвременипослеокончанияегопоследнегоиспользо-
вания.Есликритическаятемператураθ
M
вкотледостигаетсяраньшечем
возможно использование обоих стержней, то необходима полная остановка
реактора. Очевидное требование к поведению системы заключающется в
том, что реактор не должен останавливаться. Это требование корректно-
сти можно выразить темпоральной формулой ¬stop.
Для демонстрации обратного метода символьной верификации пред-
положим, что температура в реакторе меняется по линейным законам
12
.
Пусть v
r
— скорость самопроизвольного увеличения температуры в реак-
торе, v
1
и v
2
— скорости охлаждения реактора с помощью первого и вто-
рого стержней соответственно. Система контроля в этом случае является
линейной гибридной системой с постоянными коэффициентами.
Символьный метод состоит из следующих шагов:
• Построение tcp-автомата для гибридной системы (рис.7). Дополни-
тельныевещественныепеременныеx
1
иx
2
,отслеживатвремямеждудвумя
последовательными использованиями каждого из стержней. Дополнитель-
ная управляющая переменная l принимает значение номера текущей лока-
ции.
• Oписание для каждой локации гибридного автомата tcp-предикаты
по одной из формул (например, по формуле (7)). В данном случае, очевид-
но, они будут выглядеть так:
tcp
0
(X)≡θ+v
r
t≤θ
M
tcp
1
(X)≡θ−v
1
t≥θ
m
tcp
2
(X)≡θ−v
2
t≥θ
m
tcp
3
(X)≡true
• Спецификациятребованияформулойжизнеспособноститемпоральной
12
вработе[27]демонстрируетсясимвольнаяверификация(сиспользованиемсистемыHyTech)дляреше-
ния задачи параметрического синтеза значения T системы температурного контроля атомного реактора
в более общем случае, когда законы изменения температуры описываются дифференциальными включе-
ниями

'
&
$
%
'
&
$
%
'
&
$
%
'
&
$
%
θ =θ
0
+v
r
t
x
1
=x
10
+t
x
2
=x
20
+t
θ =θ
0
−v
1
t
x
2
=x
20
+t
θ =θ
0
−v
2
t
x
1
=x
10
+t
stop
?
?
6
θ :=θ
m
x
1
:=T
x
2
:=T
θ =θ
m
x
2
:= 0
θ =θ
M
∧
x
2
≥T
-
 
H
H
H
H
H
H
H
H
H
H
H
H
H
H
H
H
H j
θ =θ
m
x
1
:= 0
θ =θ
M
∧ x
1
≥T
θ =θ
M
∧ x
1
<T∧ x
2
<T
0
2
1
3
Рис. 7. Гибридный автомат системы температурного контроля атомного реактора.
логикиреальноговремени.Требованиекорректности ¬(l = 3)преобразу-
ется в требование жизнеспособности достаточно просто:
I⇒ (l = 3) ≡ ¬∃♦(l = 3)
где I — предикат, описывающий начальные значения всех переменных
и значания параметров гибридного автомата. Пусть
I≡θ
M
= 15∧θ
m
= 3∧v
r
= 6∧v
1
= 4∧v
2
= 3∧T = 6
Таким образом, следует найти множество состояний, из которых до-
стижимы состояния, описываемые предикатом∃♦(l = 3) и доказать, что
I∧¬∃♦(l = 3)6=∅.
• Применение одного из итерационных правил обратного метода для
темпоральнойформулыP =∃♦P
ϕ
(P
ϕ
≡l = 3).Очевидно,следуетвыбрать
правило 1 для формулы P
ϕ
1
∃UP
ϕ
2
, так как∃♦P
ϕ
=true∃UP
ϕ
.
Характеристическое множество формулы P есть
W
i
P
i
, где
P
0
=P
ϕ
≡l = 3;
P
i+1
=P
i
∨true.P
i
;
Заметим, что
(true.P )(X)≡

∃e∃t(pre
e
(P)(ϕ
s
(X)(t))∧(tcp
s
(X)(t))∨P(ϕ
s
(X)(t))∧tcp
s
(X)(t)
кроме того, очевидно, что
pre
e
P
1
∨P
2
= pre
e
1
P
1
∨pre
e
2
P
2
,
где pre
e
P =b(X)∧P(f(X))
Вычисление итерационных формул:
P
1
≡ (l = 3)∨true. (l = 3) = (l = 3)∨∃e∃t(l = 0)∧θ+6t = 15∧x
1
+t <
6∧x
2
+t< 6∧θ≤ 15)∨(true∧l = 3) =
{6t = 15−θ} = (l = 0∧θ≤ 156x
1
< 21+θ∧6x
2
< 21+θ)∨(l = 3);
P
2
=P
1
∨true.P
1
;
pre
e
[P
1
∨P
0
] = pre
e
[(l = 0∧θ≤ 15∧6x
1
< 21+θ∧6x
2
< 21+θ)∨(l = 3)] =
pre
e
(l = 0∧θ ≤ 15∧ 6x
1
< 21 +θ∧ 6x
2
< 21 +θ)∨ pre
e
(l = 3) =
pre
e
10
P
1
(X)∨pre
e
20
P
1
(X)∨pre
e
03
P
0
(X);
pre
e
10
P
1
(X)≡θ = 3∧x
1
= 0∧θ≤ 15∧6x
1
< 21+θ∧6x
2
< 21+θ;
pre
e
20
P
1
(X)≡θ = 3∧x
2
= 0∧θ≤ 15∧6x
1
< 21+θ∧6x
2
< 21+θ;
true.(P
1
∨l = 3)(X)≡{θ
(1)
=θ−4t;θ
(2)
=θ−3t;x
1
→x
1
+t;x
2
→x
2
+t} =
l = 1∧θ−4t = 3∧x
1
= 0∧θ−4t≤ 15∧6(x
2
+t)< 21+(θ−4t)∧6(x
1
+t)<
21+(θ−4t)∧θ≥ 3
∨
l = 2∧θ−3t = 3∧x
2
= 0∧θ−3t≤ 15∧6(x
2
+t)< 21+(θ−3t)∧6(x
1
+t)<
21+(θ−3t)∧θ≥ 3
∨
l = 0∧θ≤ 15∧6x
1
< 21+θ∧6x
2
< 21+θ
∨
(l = 3) =
[l = 1∧3≤θ≤ 15∧6x
2
+10t< 21+θ∧θ−4t = 3]∨
[l = 2∧3≤θ≤ 15∧6x
1
+9t< 21+θ∧θ−3t = 3]∨
[l = 0∧θ≤ 15∧6x
1
< 21+θ∧6x
2
< 21+θ]∨[l = 3] =
{4t =θ−3;→ 12x
2
+3θ< 57;3t =θ−3→ 6x
1
+3θ< 30} =
[l = 1∧3≤θ≤ 15∧4x
2
+θ< 19]∨
[l = 2∧3≤θ≤ 15∧3x
1
+θ< 15]∨
[l = 0∧θ≤ 15∧6x
1
< 21+θ∧6x
2
< 21+θ]∨[l = 3];
аналогичным образом получаем,

P
3
≡ [l = 0∧θ≤ 15∧(6x
1
< 21+θ∧6x
2
< 21+θ∨6x
2
+3<θ)]
[l = 1∧3≤θ≤ 15∧4x
2
+θ< 19]∨
[l = 2∧3≤θ≤ 15∧3x
1
+θ< 15]∨[l = 3];
P
4
≡P
3
Предикат¬
W
3
i=0
P
i
(0), представляющий множество состояний, их кото-
рыхдостижимысостояния,описанныетемпоральнойформулой¬∃♦(l = 3),
имеет вид:
l = 0∧θ≤ 15∧(θ+21≤ 6x
1
∧θ≤ 6x
2
+3∨θ+21≤ 6x
2
)∨
l = 1∧3≤θ≤ 15∧19≤ 4x
2
+θ∨
l = 2∧3≤θ≤ 15∧15≤ 3x
1
+θ;
• ПредикатI,характеризующиймножествоначальныхсостояний,удо-
влетворяет предикату¬
W
3
i=0
P
i
(0), следовательно требование корректно-
сти доказано.
Нетрудно доказать, что при значении T = 8 требование корректности
уженебудетудовлетворяться.Действительно,результатомитерационного
алгоритма для темпоральной формулы∃♦l = 3 после восьми итераций
будет являться предикат (подробнее см. [23]):
¬
W
7
i=0
P
i
(0)≡
l = 0∧θ> 15∨
l = 1∧(θ< 3∨θ> 15)∨
l = 2∧(θ< 3∨θ> 15)
ТаккакпредикатI≡l = 0∧θ≤ 15∧x
1
≥ 6∧x
1
≥ 6,характеризующий
множество начальных состояний системы, не удовлетворяет вышеописан-
ному предикату, то локация 3 гибридного автомата достижима.
4.2. Интегрирующие графы
Альтернативнымподходом(единственнойсерьезнойальтернативой)ксим-
вольнойверификации гибридных систем является использование вычисли-
тельной модели интегрирующего графа и сведение верификации линейных
гибридных автоматов с постоянными коэффициентами и с предикатами
вида
Σ
n
i=1
a
i
x
i
∼c, x
i
∈X,a
i
,c∈Z,∼={<,>,=,6=,≤,≥} (16)

к задаче математического программирования [25].
Он иллюстрирует попытку объединить методы верификации таймиро-
ванного автомата и теорию функций длительностей предикатов
13
.
В общем случае, как было показано выше, для линейных гибридных авто-
матовпроблемаверификациинеразрешима (см.пессимистическоенаправ-
ление), однако, оказывается, что если предикаты типа (16) присутствуют
только на переходах, не участвующих в циклах, то задача верификации
может быть успешна разрешена.
Определение 4.5. Интегрирующимграфомназываетсялинейныйгибрид-
ный автомат с постоянными коэффициентами с одной выделенной вход-
ной локацией s
I
∈ S, выделенным множеством терминальных локаций
S
F
⊆S, содержащий на циклических дугах только предикаты вида
x
i
∼c, x
i
−x
j
∼c, c∈Z
где x
i
,x
j
— переменные-интеграторы
Σ x
i
∼c, c∈Z
где x
i
— переменные-таймеры
и содержащий на ациклических дугах предикаты вида (16).
Замечание 4.1. Любой Интегрирующий граф может быть разбит на
две части — ”циклическую”часть L, которая имеет выходные дуги в
нециклическую ”терминальную”часть T, к которой относятся все тер-
минальные вершины.
Ограничение на класс линейных гибридных автоматов, специфицируе-
мых данной моделью, заключается в требовании, чтобы предикаты вида
(16) должны присутствовать только в части T. Переменные, участву-
ющие в этих предикатах, называются терминальными.
Важно отметить, что модель исследует только конечные префиксы
вычислений гибридного автомата.
На рисунке 8 изображен интегрирующий граф для системы Gas Burner
(сравнисрис.6).Внемвыделенаначальнаялокация,описывающаямноже-
ствосостоянийсистемыдоначалапроизвольногонаблюдения (локацияs
0
)
и добавлена терминальная ациклическая часть, которая заключает в себе
13
Теорияфункцийдлительностипредикатов, Duration Calculus,появиласьвтеорииреактивныхсистем
в начале 1990-х годов как альтернатива темпоральной логики реального времени и метода символьной
верификации ([26],[37]).

'
&
$
%
'
&
$
%
'
&
$
%
x =x
0
+t
y =y
0
z =z
0
+t
x =x
0
+t
y =y
0
+t
z =z
0
+t
x =x
0
+t
y =y
0
z =z
0
+t
- -
-
 
x,y,z := 0 x := 0
x≤ 1/x := 0
x≥ 30/x := 0
s
0
s
1
s
2
leak ¬ leak ¬ leak
&%
'$
'
&
$
%
'
&
$
%
#
"
 
!
#
"
 
!
  -
?
-
20·y>z?
z≥ 60?
20·y≤z?
Bad Good Check
Рис. 8. Интегрирующий граф для гибридной системы Gas Burner.
проверку требования корректности (15) системы и имеет две терминаль-
ные локации ”Bad”и ”Good”. Требование корректности (15) является слож-
ным предикатом вида (16). Верификация этого требования методом инте-
грирующих графов заключается в доказательстве недостижимости терми-
нальной локации ”Bad”.
ПустьR : S× X → Z — набор векторов целых констант, которые
описывают значения производных интеграторов в каждой вершине инте-
грирующего графа, E — множество дуг графа.
Решение проблемы достижимости в интегрирующих графах сводится
к верификации некоторого требования, описаного на языке логики счисле-
нияпервогопорядка,дополненнойтемпоральнойфункциейдлительностии
линейными неравенствами, над моделью конечного таймированного авто-
мата, в который может быть преобразован интегрирующий граф.
Конечныйтаймированныйавтоматпредставляетсобойупрощеннуювер-
сию таймированного автомата, в которой рассматриваются только конеч-
ные траектории и опредено множество конечных локаций.
Дляясностидальнейшегоизложенияздесьнеобходимоввестинесколько
определений теории функций длительностей предикатов.

Пусть ϕ — формула счисления предикатов первого порядка (терм), ис-
тинная в конкретных позициях пробега автомата τ = (s
0
,t
0
),... ,(s
n
,t
n
).
Определение 4.6. Длительностью формулы ϕ (
R
ϕ) в позиции j, 0 ≤
j≤ n, пробега τ называется суммарное время истинности формулы на
пробеге до момента t
j
:
val(τ,j,
R
ϕ) = Σ
0≤i<j,s
i
|=ϕ
(t
i+1
−t
i
)
Определение 4.7. Формулами длительности (Duration formula) называ-
ютсялогическиекомбинациипредикатовсдлительностью,которыеопре-
деляются как неравенства вида
Σ
m
i=1
a
i
R
ϕ
i
∼c,
где∼∈{<,>,=,6=,≤,≥},a
i
,c∈Z, ϕ
i
– термы.
Примерамиформулдлительностимогутслужитьформулытипа:
WV
Σ
m
i=1
a
i
R
ϕ
i
∼c
W
Σ
m
i=1
a
i
R
ϕ
i
∼c
V
Σ
m
i=1
a
i
R
ϕ
i
∼c
Преобразование Интегрирующего графа к конечному таймированному
автоматусводитсякзаменеинтеграторов (укоторыхR6= 0)ивсехпреди-
катов вида (16) на дизъюнктивную формулу длительности.
Пусть ˆ s∈ s
F
— выделенная терминальная вершина Интегрирующего
графа, исследуемая на достижимость (ˆ s∈T).
КонечныйтаймированныйавтоматконструируетсяизИнтегрирующего
графа по следующим принципам:
1. из Интегрирующего графа удаляются все дуги и вершины, не участ-
вующие в путях s
I
→ ˆ s
2. предикаты вида (16) на дугах заменяются на тривиальный предикат
“True”
3. из множества терминальных локаций конечного таймированного ав-
томата удаляются все вершины кроме ˆ s.
Затемконструируетсяформуладлительности,котораяизображаетусло-
вие, при котором система может оказаться в вершине ˆ s.
Значение некоторая терминальная переменная Интегрирующего графа
x∈X в текущий момент времениможет быть описано формулойдлитель-
ности
14
:
14
Предикат at s
i
есть обозначение (уникальная метка) вершины s
i
, он истинен только в этой вершине.

x(t) =x
0
+R
1
R
at s
1
+...+R
i
R
at s
i
где x
0
∈ X
0
, s
1
,... ,s
i
∈ S — вершины, в которых переменная x изме-
нялась до момента t (R
i
— соответствующие значения производной).
Очевидно, при s
i
= ˆ s,x(t) = x
F
— формула длительности, которая
описывает значение переменной x в терминальной вершине.
Пусть теперь ψ
i
— есть конъюнкция всех предикатов вида (16), кото-
рые встречались на дугах пути i (и были заменены на True), и в которых
каждое вхождение переменной x заменено на соответствующую формулу
длительности x
F
. Поскольку T — ациклическая часть графа, то количе-
ство путей s
I
→ ˆ s конечно (пусть n) и, следовательно, можно определить
дизъюнктивную формулу длительности
ψ =ψ
1
∨...∨ψ
n
Теорема 4.1. Локация ˆ sинтегрирующегографадостижиматогдаитоль-
ко тогда, когда существует пробег в соответствующем конечном тай-
мированном автомате, на которой истинна формула ψ.
На рисунках 9 и 10 изображены два варианта построения конечного
таймированногоавтоматадляинтегрирующегографасистемыGasBurner.
Первыйвариантсоответствуетслучаю,когдапеременнаяz интерпретиру-
ется как таймер. Соответсвтующая формула длительности имеет вид:
ψ
1
: 20
R
at s
1
>
R
at s
0
+
R
at s
1
+
R
at s
2
Во втором варианте переменная z интерпретируется как интегратор и
формула длительности имеет вид:
ψ
1
: 20
R
at s
1
>
R
at s
0
+
R
at s
1
+
R
at s
2
∧
R
at s
0
+
R
at s
1
+
R
at s
2
≥ 60
В обоих случаях исследуется на достижимость вершина ”Bad”.
Верификация истинности некоторой формулы длительности на конеч-
ном таймированном автомате сводится к решению задачи линейного цело-
численного программирования. Пусть
n
s
– число визитов вершины s на пробеге
m
e
– число переходов по дуге e на пробеге
r
e
– последовательный номер дуги e в списке дуг траектории, упорядо-
ченном в соответствии с последовательностью их первого визита (то есть
если r
e
=k, то e есть k-тая дуга пробега автомата)
В систему неравенств войдут следующие компоненты (здесь e
−
– вход-
ная дуга, Δ – функция длительности пребывания в локации):

'
&
$
%
'
&
$
%
'
&
$
%
s
0
s
1
s
2
- -
-
 
x,y,z := 0 x := 0
x≤ 1/x := 0
x≥ 30/x := 0
'
&
$
%
'
&
$
%
#
"
 
!
 
?
z≥ 60?
Bad Check
Рис. 9. Приведение интегрирующего графа системы Gas Burnerкконечномутаймирован-
ному автомату. z — таймер
'
&
$
%
'
&
$
%
'
&
$
%
s
0
s
1
s
2
- -
-
 
x,y,z := 0 x := 0
x≤ 1/x := 0
x≥ 30/x := 0
'
&
$
%
'
&
$
%
#
"
 
!
 
?
Bad Check
Рис. 10. Приведение интегрирующего графа системы Gas Burner к конечному таймиро-
ванному автомату. z — интегратор

• Flow:∀s∈S−{s
F
}
n
s
= Σ
e
j
∈pred(s)
m
j
= Σ
e
i
∈succ(s)
m
i
(траектории не могут завершиться нигде, кроме как в s
F
)
• Initiation and Termination:
n
s
F
= Σ
e
j
∈pred(s
F
)
m
j
=m
e
− = 1
(войти в s
F
и в s
0
можно только 1 раз)
• Accessibility:
m
e
− =r
e
− = 1 ∀e∈E−{e
−
}
(m
e
=r
e
= 0)∨(
W
e
0
∈pred(e)
(0<r
e
0 <r
e
))
(упорядоченность переходов, pred(e) =pred(s))
• Visits Durations:∀s∈S
Δ(s) =n
s
v
s
• The Duration Property:
WV
Σ
m
i=1
a
i
Σ
s∈S,s|=ϕ
i
Δ(s)∼c
Система должна быть решена относительно неизвестных
n
s
≥ 0, m
e
≥ 0, r
e
≥ 0
ЭффективныйалгоритмрешенияэтойклассическойзадачиЛЦПможно
найти в работах по математическому программированию.
Разрешимые системы линейных неравенств могут быть получены для
целочисленных пробегов конечного таймированного автомата, когда счи-
тается, что пребывание в любой его вершине может иметь только фикси-
рованную длительность v
s
={0,1}, а также для конечного таймированно-
го автомата с одним вещественным таймером в траекториях (истинность
общей формулы длительности) и для общего случая вещественных тра-
екторий конечного таймированного автомата (истинность дизъюнктивной
формулы длительности) ([25]).
5. Заключение
Методы, разработанные в гибридном направлении теории реактивных си-
стемвпоследниенескольколет,преобретаютвсебольшуюпопулярностьв
области компьютерного моделирования и анализа непрерывно-дискретных

систем. Об этом свидетельствует появление на западе программных ком-
плексов по моделированию и анализу поведения непрерывно-дискретных
и сложных встроенных систем управления, в основе которых лежит ме-
тод символьной верификации (система HyTech, 96 год [27]) и аксиомати-
ческий подход, разработанный на базе карт состояний (системы Statem-
ate [10] и др.). Несомненно гибридное направление является привлекатель-
ным,таккакпозволяетпроводитьанализкачественныхсвойствповедения
непрерывно-дискретныхсистем,неприбегаякчисленномумоделированию
отдельных траекторий, кроме того, как уже было замечено, непрерывно-
дискретные системы имеют много общего с реактивными системами, изу-
чаемыми теорией реактивных систем.
Однако, обзор достижений в этой области наглядно показывает, что
методы автоматической верификации применимы только для некоторых
(достаточно узких) классов непрерывно-дискретных систем и поэтому не
могутпретендоватьнауниверсальность.Втаблице1представленыизвест-
ные на сегодня классы назрешимых и неразрешимых гибридных систем с
точкизрениярассмотренныхметодов.Фактическитаблица 1демонстриру-
ет максимальный уровень сложности непрерывных локальных поведений,
прикоторомметодытеорииреактивныхсистемдаютудовлетворительные
результаты.
Кроме того, при использовании методов, основанных на дискретизации
пространства состояний, возникают проблемы, которые связаны с дина-
мической природой исследуемых систем. К ним относятся, например, про-
блема устойчивости и достоверности полученных решений в некоторой ε–
окрестности выделенных областей, эквивалентность результатов анализа,
получаемыхразличнымиметодами (втомчислечисленныммоделировани-
ем). Интересными вопросоми является оценка минимального уровня слож-
ности дискретных процессов системы, при котором использование техно-
логии моделирования непрерывных процессов, теории управления и опти-
мизационныхметодовзатрудненоилистановитсяменееэффективным,чем
использованиеметодовгибридногонаправления,исдругойстороныоценка
реальных объемов эффективно решаемых автоматическими методами ве-
рификации задач (максимальное количество параллельных динамических
элементов, максимальный размер гибридных автоматов для каждого эле-
мента).Насегодняпримерыгибридныхсистем,демонстрирующихметоды
верификации,представляют изсебятривиальныесистемыавтоматическо-
го управления. Гибридный автомат, описывающий поведение, к примеру,

системы управления наблюдениями на радиотелескопе РАТАН-600, о ко-
торой упоминалось ранее, даже в упрощенном случае имеет C
3
n
локаций ,
связанных дугами по принципу ”каждый с каждым”(n – число наблюда-
тельных циклов).
Покачтоэтипроблемыникакнеосвещаютсявгибридномнаправлении,
ноонинесомненностанутрешающиминаэтапевнедренияметодовверифи-
кации в программные комплексы моделирования непрерывно-дискретных
систем.
Автор статьи выражает благодарность своим руководителям профес-
сору Ю.Г.Карпову и Ю.Б.Сениченкову за постановку задачи, постоянный
интерес, помощь в работе и за ценные замечания по статье.

Таблица 1. Верификация гибридных систем
класс гибридных систем класс
требований к по-
ведению
метод верифика-
ции
ссылки
Линейные гибридные системы с
постоянными целочисленными ко-
эффициентами
F ={dX/dt=K},K∈Z
λ={X :=[α;β]},α,β∈Z
φ:X∼C, C∈Z
формулы темпо-
ральной логики
деревьев вычис-
лений
преобразование
к модели тай-
мированного
графа, алгоритм
Кроноса
стр.23,
[32]
Линейные гибридные системы с
постоянными целочисленными ко-
эффициентами
F ={dX/dt=K},K∈Z
λ={X :=Y} Y∈Z
φ : Σa
i
x
i
∼ c, a
i
,c∈ Z (запреще-
ны на циклических дугах)
φ:x∼c;x
i
−x
j
∼c, c∈Z (разре-
шены всюду)
формулы дли-
тельности
∨∧Σa
i
R
ϕ
i
∼c
a
i
,c∈Z
преобразование
к модели конеч-
ного таймиро-
ванного графа
и решение за-
дачи линейного
программирова-
ния
15
стр.36,
[25]
класс гибридных систем класс
требований к по-
ведению
метод верифика-
ции
ссылки
Линейные гибридные системы
F ={dX/dt=Λ,Λ∈[A,B]},
A,B∈Z
λ={X :=[α;β]},α,β∈Z
φ:X∼C, C∈Z
множество неиз-
бежных формул
(∀) темпораль-
ной логики
деревьев вычис-
лений
преобразование
к модели тай-
мированного
графа, алгоритм
Кроноса
стр.24,
[32]
Гибридные системы с прямо-
угольными дифференциальными
включениями
F ={dX/dt∈[L;U]}, L,U∈Z
λ={X :=[l;u]}, l,u∈Z
φ:X∼C, C∈Z
формулы темпо-
ральной логики
деревьев вычис-
лений
наложение
Δ-сетки, алго-
ритм Кроноса
стр.21,
[31]
Гибридные системы типа зависа-
ющего автомата
F ={dX/dt=0;1}
λ={X :=Y}, Y∈Z
φ:x
i
∼c, x
i
−x
j
∼c,c∈Z
формулы темпо-
ральной логики
деревьев вычис-
лений
построение timer
region automa-
ton, алгоритм
Кроноса
стр.22,
[36]
15
доказана неразрешимость проблемы достижимости для систем с λ ={X := Y} Y ∈ Z и φ : Σa
i
x
i
∼
c, a
i
,c∈Z размерности >2, [25]

Таблица 1. (Продолжение)
Гибридные системы с кусочно-
постоянными производными
F ={dX/dt=C},C∈R
λ= — (нет разрывов)
φ:Σa
i
x
i
∼c, a
i
,c∈R
формулы ги-
бридной темпо-
ральной логики
символьная
верификация
16
гибридных си-
стем
[33]
Гибридные системы общего вида
F – аналитическая функция
λ={X :=Y}, Y∈Q
φ:Σa
i
x
i
∼c, a
i
,c∈Q
формулы темпо-
ральной логики
деревьев вычис-
лений
символьная
верификация
гибридных си-
стем
17
стр.25,
[23]
Гибридные системы общего вида
F – дифф. ур-ния 1-го порядка
λ={X :=Y}, Y∈Q
φ – терм
формулы ги-
бридной темпо-
ральной логики,
требования
корректности
аксиоматическая
индуктивная
система доказа-
тельств
[21],
[35]
Список литературы
[1] Бусленко Н.П.: Моделирование сложных систем. М: ”Наука”, 1978.
[2] Программное обеспечение моделирования непрерывно-дискретных систем.(под ред.
В.Глушкова), М: ”Наука”, 1975.
[3] Прицкер А.: Введение в имитационное моделирование и язык СЛАМ II. М: ”Мир”, 1987,
646с.
[4] InichovaM.A.,InichovD.B.,KolesovY.B.,SenichenkovY.B.:MovelVisionforWindows.Graph-
ical environment for hybrid systwr simulating. User’s Guade. Moscow-St.Petersburg, 1995.
[5] Kolesov Y.B., Senichenkov Y.B.: Model Vision 3.0 for Windows 95/NT. The graphical en-
vironment for complex dynamic system design. ICI&C’97 PROCEEDINGS, v.2, p.704-711,
St.Petersburg, 1997.
[6] Kolesov Y.B., Senichenkov Y.B.: Visual speciﬁcation language intended for event-driven hier-
archical dynamic system with variable structure. ICI&C’97 PROCEEDINGS, v.2, p.712-719,
St.Petersburg, 1997.
[7] Борщев А., Карпов Ю., Колесов Ю.: Спецификация и верификация систем логического
управления реального времени. В сб. ”Системная иняформатика”, вып.2, ИСИ СО РАН,
Н-ск, 1993, 40с.
[8] ПарийскаяЕ.:Сравнительныйанализматематическихмоделейиподходовкмоделированию
и анализу непрерывно–дискретных систем. Готовится к публикации.
[9] Maler O., Manna Z., Pnueli A.: From Timed to Hybrid systems. Real-Time: Theory in Practice,
Lecture Notes in Comp.Sc 600, p.447-484. Springer-Verlag, 1992.
16
доказана сходимость при размерности 2 и доказана неразрешимость проблемы достижимости при
размерности >2, [33]
17
сходимость метода не гарантируется

[10] HarelD.:Statecharts:aVisualFormalismforComplexSystems.Sci.Comput.Prog.8,p.231-274,
1987.
[11] Manna,Z.,PnueliA.:TheTemporalLogicofReactive andConcurrentSystems.Springer-Verlag,
1992.
[12] Ben-Ari M., Manna, Z., Pnueli A.: The Temporal Logic of Branching Time. Proc. 8th Annual
Symposium on Principles of Programming Languages, 1981, ACM Press, Williamsburg, p. 164-
176.
Springer-Verlag, 1992.
[13] Clarke E.M., Emerson E.A.: Design and synthesis of synchronisation skeletons using branching-
timetemporallogic.InWorkshoponLogicofProgram,LectureNotesinComp.Sc.131.Springer-
Verlag, 1981.
[14] ClarkeE.M.,EmersonE.A.,SystlaA.P.:Automaticveriﬁcationofﬁnite-stateconcurrentsystems
using temporal-logic speciﬁcations. ACM Transactions on Programming Languages and Systems,
8(2): p.244-263. 1986.
[15] Bertolomieu B., Diaz M.: Modeling and veriﬁcation of time dependent systems using time Petri
nets. IEEE Transactions on Software Engineering, SE-17,N 3, March 1991.
[16] Baeten J.C.M., Bergstra J.A.: Real time Process Algebra. Formal Aspects of Computing, 3,
p.142-188, 1991.
[17] Reed G.M., Roscoe A.W.: A Timed Model for Communicating Sequential Processes. Lecture
Notes in Comp.Sc. 571, Springer-Verlag, 1986.
[18] Moller F., Tofts C.: A Temporal Calculus of Communicating Systems. Proceedings of CON-
CUR’90. Lecture Notes in Comp.Sc. 458, Springer-Verlag, 1990.
[19] Henzinger T.A., Manna, Z., Pnueli A.: Temporal proof methodologies for real-time systems.
Proc. 18th Annual Symposium on Principles of Programming Languages, 1991, ACM Press, p.
353-366.
[20] Henzinger T., Nicollin X., Sifalis J., Yovine S.: Symbolic Model-Checking for Real-Time Systems.
In Proc. 7th LICS. IEEE Comp. Soc. Press, 1992.
[21] Alur R., Courcoubetis C., Henzinger T., Ho P-T.: Hybrid automata: an algorithmic approach
to the speciﬁcation and analysis of hybrid systems. In Workshop on Theory of Hybrid Sys-
tems,Lyndby, Denmark, June 1993. LNCS 736, Springer-Verlag.
[22] Olivero A., Yovine S.: Kronos: a tool for verifying real-time systems. User’s Guide and Reference
Manual. VERIMAG, Grenoble, France, 1992.
[23] Nicollin X., Olivero A., Sifalis Y., Yovine S.: An Approach to the Description and Analysis of
Hybrid Systems. Hybrid Systems, Lecture Notes in Comp.Sci 736, p.149-178. Springer-Verlag,
1993.
[24] Alur R., Courcoubetis C., Dill D.L.: Model-Checking for real-time systems. 5th LICS (5th IEEE
Simp. Logic in Comp. Sci.), p.414-425. IEEE Comp. Soc. Press, 1990.
[25] KestenY.,PnueliA.,SifalisY.,YovineS.:IntegrationGraph:aclassofdecidablehybridsystems.
Hybrid Systems, Lecture Notes in Comp.Sci 736, p.179-208. Springer-Verlag, 1993.

[26] ChaochenZ.,HoareC.A.R.,RavnA.P.:Acalculusofdurations.InformationsProcessingLetters,
40(5): p.269-276. 1991.
[27] HenzingerT.,HoP-T.:HyTech:TheCornellHybridTechnologyTool.HybridSystemsII,Lecture
Notes in Comp.Sci 999, p.265-293. Springer-Verlag, 1995.
[28] Wolfram S.: Mathematica: A System for Doing Mathematics by Computer. Addisson–Wesley
Publishing Company, 1988.
[29] Redfern D.: The Maple Handbook. 531 pp., Springer-Verlag, 1994.
[30] Lichtenshtein O., Pnueli A.: Checking that ﬁnite state concurrent programs satisfy their linear
speciﬁcation. 12
th
Symp. on Principles of Program Languages. Austin, Texas. 97–107, 1984.
[31] Puri A., Varajya P.: Decidability of Hybrid Systems with Rectangular Differential Inclusions. 6
t
h
International Conference CAV’94. Lecture Notes in Comp. Sci. 818, p.95–104, 1994.
[32] OliveroA.,SifakisJ.,YovineS.:UsingAbstractionsfortheVeriﬁcationofLinearHybridSystems.
6
t
h International Conference CAV’94. Lecture Notes in Comp. Sci. 818, p.81–94, 1994.
[33] Asarin E., Maler O., Pnueli A.: Reachability Analysis of Dinamical Systems having Piecewise-
Constant Derivatives. Theoretical Comp. Sci., v.138,N.1, 1995
[34] Asarin E., Maler O.: On some Relations between Dynamical Systems and Transition Systems.
Proc. of ICALP’94, Lecture Notes in Comp. Sci 820, p.59–72, Springer-Verlag, 1994.
[35] Henzinger T., Manna Z., Pnueli A.: Towards Reﬁning Temporal Speciﬁcations into Hybrid Sys-
tems. In Hybrid Systems, LNCS 736, p.60–76, Springer-Verlag, 1993.
[36] J.McManis, P.Varajya – Suspension Automata: A Decidable Class of Hybrid Automata. 6
th
International Conference CAV’94. Lecture Notes in Comp. Sci. 818, p.105–117, 1994.
[37] Choachen Z., C.A.R. Hoare, A.P.Ravn: A calculus of durations. Inform. Process. Lett. 40, p.269–
276, 1991.
[38] Lamport L.: Specifying concurrent program modules. ACM Trans. Prog. Lang. Syst. 5, p.190–
222, 1983.
[39] Lamport L.: What good is temporal logic. Proc.IFIP Congress,North-Holland, p.657–668, 1983.
[40] Manna Z.,Pnueli A.: Speciﬁcation and veriﬁcation of concurrent program by∀-automata. 14
th
Symp. on on Principles of Program Languages. ACM, Minich, January 1987.
[41] Alur R, Fix L, Henzinger T.A.: A Determinizable Class of timed Automata. 6
th
International
Conference CAV’94. Lecture Notes in Comp. Sci. 818, p.1–13, 1994.
Электронный журнал.  417
