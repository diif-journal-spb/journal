ДИФФЕРЕНЦИАЛЬНЫЕ УРАВНЕНИЯ 
И 
ПРОЦЕССЫ УПРАВЛЕНИЯ 
№ 2, 2017 
Электронный журнал, 
рег. Эл № ФС77-39410 от 15.04.2010 
ISSN 1817-2172 
 
http://www.math.spbu.ru/diffjournal 
e-mail: jodiff@mail.ru 
 
Численные методы 
 
 
УДК 519.622.1, 51-74 
 
Метод уточнения численных решений обыкновенных 
дифференциальных уравнений генетическими 
преобразованиями 
 
В.Н. Таран, А.М. Долженко, К.К. Рыбалко 
 
Донской государственный технический университет, 
Технологический институт (филиал) ДГТУ в г. Азове, Ростовская 
область, г. Азов 
 
Аннотация 
 
В статье описан модифицированный генетический алгоритм решения задачи Коши. Для 
анализа эффективности метода проведен ряд тестов, результаты которых представлены 
таблично и графически. Выполнено сравнение решений, полученных предлагаемым и 
классическими методами (Рунге-Кутта и Адамса-Башфорта 4 порядка). Определены входные 
параметры алгоритма, дающие наиболее точный результат. Показана возможность применения 
алгоритма для задач, не имеющих аналитического решения. Научная новизна работы состоит в 
реализации нового численного метода решения обыкновенных дифференциальных уравнений, 
имеющего более высокий класс точности, чем классические методы. Анализ научных работ в 
области применения генетических алгоритмов показал, что предлагаемый авторами метод 
уточнения численных решений генетическими алгоритмами является новым, никем ранее не 
предлагаемым. Актуальность метода обусловлена возможностью применения предложенного 
подхода к модификации решений широкого класса численных алгоритмов. 
Ключевые слова: генетический алгоритм, численные методы, задача Коши. 
 Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  2 
Abstract 
 
The article describes the modified genetic algorithm for the Cauchy problem solving. Series of 
tests are performed to analyze the method effectiveness, which results are presented in tables and 
figures. Comparison of the decisions those are received by the offered method and classical methods 
(Runge-Kutta and Adams-Bachfort) is executed. The input parameters of an algorithm which give the 
most accurate result are determined. Application of the algorithm for problems which do not have the 
analytical decisions is shown. Scientific novelty of the work consists in realization of a new numerical 
method of the solution of the ordinary differential equations having higher class of accuracy, than 
classical methods. The analysis of scientific works in a scope of genetic algorithms has shown that the 
authors' method of refinement numerical solutions by genetic algorithms is unique, it has not been 
previously described. Relevance of the method is caused by the offered approach application 
possibility for modification of a wide class of numerical algorithms solutions. 
Keywords: genetic algorithm, numerical methods, Cauchy problem. 
 
1 Введение 
Впервые о генетических алгоритмах (ГА) заговорили 60 лет назад [1, 2]. Первые 
вычислительные эксперименты в области эволюционных вычислений были проведены на 
полупроводниковых ЭВМ, но уже показали свою эффективность в решении задач, не имеющих 
аналитического решения, или требующих колоссальных вычислительных затрат для перебора 
всех возможных вариантов решения. Традиционно [3-9] ГА работают на случайном наборе 
входных параметров, генерируемых из множества всех допустимых комбинаций элементов 
предметной области. Формализовано входные параметры представляются в виде вектора 
(«хромосомы»), где каждый входящий в ее состав элемент («ген») задает характеристику 
одного из свойств моделируемой системы и может быть описан битом, числом, символом или 
какой-либо структурой данных.  
В ходе работы ГА над случайным набором хромосом выполняются генетические 
операции: скрещивание (кросоовер) и мутации. Кроссовер – это функция, которая выполняется 
над двумя хромосомами, случайно выбранными из общего множества хромосом («популяции») 
и дает на выходе новую хромосому, каждый ген которой формируется из соответствующего 
гена одного из «родителей» (начальных хромосом). Мутация выполняется над произвольно 
выбранным геном хромосомы и заключается в его случайной модификации, не приводящей к 
выходу гена из множества допустимых значений. После каждой итерации выполняется 
вычисление некоторой целевой функции, определяющей критерий сходимости алгоритма. Если Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  3 
целевая функция от новой хромосомы удовлетворяет условиям сходимости, то хромосома 
заносится в популяцию и участвует в дальнейшем скрещивании. На выходе алгоритма 
выбирается хромосома, целевая функция которой наиболее оптимальна. 
На результат работы ГА влияют следующие параметры: 
1) критерий завершения алгоритма: N – число итераций и (или) ρ – размер популяции P 
(в зависимости от конкретной задачи критерием останова алгоритма может служить 
достижение одного из параметров N или ρ, или оба параметра одновременно); 
2) σ – вероятность мутации гена в новой хромосоме; 
3) Ω – значение целевой функции, при котором хромосома попадает в популяцию. 
Несмотря на значительный успех применения ГА, особенно в период появления 
суперкомпьютеров и облачных сервисов, значительно повышающих результативность их 
применения, в ряде научных статей можно встретиться с критикой эволюционных вычислений 
[10-12]. Связано это с рядом обстоятельств: 
1) так как начальная популяция может быть сформирована из хромосом, находящихся на 
существенном расстоянии от оптимального значения, то большая вероятность попадания в 
локальный оптимум, а не в глобальный, в этом случае значение целевой функции 
результирующей хромосомы не будет существенно отличаться от значения целевой функции 
оптимума, однако состав генов в хромосомах может быть кардинально другим; 
2) в ряде случаев для сходимости популяции, составленной случайно, требуется 
достаточно много (даже по сегодняшним критериям) машинного времени – число итераций 
может достигать нескольких миллионов; 
3) как правило, для каждой узко специализированной задачи (а иногда для разных 
входных параметров одной и той же задачи) приходится строить свой вариант генетического 
алгоритма, что увеличивает временные затраты на вычисления и обработку результатов и не 
позволяет унифицировать ГА для целого класса прикладных задач.  
Авторы предлагают кардинально другой подход к формированию начальных хромосом – 
использовать в качестве входных параметров решения, полученные другими численными 
методами. Таким образом, популяция формируется не из каких-либо случайно 
сгенерированных хромосом, а из решений, которые уже удовлетворяют критериям 
результативности целевой функции. 
 
2 Постановка задачи 
Цель настоящей статьи – показать эффективность применения генетических алгоритмов 
для уточнения численных решений обыкновенных дифференциальных уравнений, полученных 
методами Рунге-Кутта и Адамса-Башфорта 4 порядка. В случае, если имеется аналитическое Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  4 
решение, показать, насколько ближе предлагаемое решение к «оригинальному» по сравнению с 
указанными выше численными методами. 
В рамках проводимого исследования решены следующие задачи:  
- разработан алгоритм, позволяющий генетическими преобразованиями модифицировать 
численные решения обыкновенных дифференциальных уравнений, полученные классическими 
методами; 
- проведено программное кодирование данного алгоритма, позволяющее таблично и 
графически сравнивать полученные результаты; 
- определены наиболее оптимальные параметры (настройки) алгоритма, дающие 
наиболее «качественный» результат; 
- проведен анализ эффективности применения предлагаемого алгоритма, определены 
области его практического применения. 
 
3 Описание алгоритма 
Пусть имеется дифференциальное уравнение, приведенное к форме Коши: 
   ′=    (   ,   )            (1) 
и начальное условие: 
   (0) =    0
           (2) 
В качестве начальных для всей популяции хромосом выберем вектора A 
⃗⃗⃗ 
и R
⃗ ⃗ 
 , 
являющиеся численными решениями задачи Коши методами Адамса-Башфорта и Рунге-Кутта 
соответственно. Координаты векторов A
⃗ ⃗ 
(a
1
,a
2
…a
n
) и R
⃗ ⃗ 
(r
1
,r
2
…r
n
) соответствуют генам 
родительских хромосом и представляют собой решения в точках: 
 x
0
+ h, x
0
+ 2 ∙ h ,… , x
0
+ n· h,  
где x
0
 – значение x, соответствующее начальному условию задачи, h – итерационный 
шаг при численном решении, n  – число отрезков дискретизации.  
Для анализа будем так же учитывать вектор аналитических решений    
 в случае, если 
аналитическое решение имеется и найдено. 
Под мутацией будем понимать приращение значение гена на величину    . Диапазон 
значений, которые может принимать параметр    , назовем дисперсией мутации (D). В процессе 
исследования дисперсию мутации будем менять в различных пределах, подбирая наиболее 
оптимальный вариант. 
Целевую функцию F будем определим следующим образом: 
   = ∑ (   (      ,      ) −       ′
)
2       =1
  ,        (3) Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  5 
где       ,       ,       ′
 - значения аргумента, функции и производной, получаемые на каждом 
шаге итерации. 
Чем меньше получаемое значение целевой функции, тем меньше отклонение 
полученных значений от истинных, а следовательно «лучше» результат, поэтому сходимость 
алгоритма в данном случае определяется уменьшением значения целевой функции. 
Опишем полученный алгоритм, состоящий из 10 шагов. 
Шаг 1. Находим вектора    
 (в случае, если существует аналитическое решение), A 
⃗⃗⃗ 
 и R
⃗ ⃗ 
. 
Для каждого из векторов найдем значение целевой функции F
A 
и F
R
 (для    
 целевую функцию 
вычислять не требуется, так как она заведомо будет равна нулю). 
Шаг 2. Добавим в популяцию    родительские хромосомы A 
⃗⃗⃗ 
 и R
⃗ ⃗ 
 («Адам» и «Ева» для 
всей популяции). Родительские хромосомы получают в популяции номера 1 и 2:    1
⃗⃗⃗ 
 и    2
⃗⃗⃗⃗ 
 
(значения соответствующих им целевых функций –    1
 и    2
). 
Размеру популяции присваиваем начальное значение r = 2 (в популяцию добавлены две 
хромосомы). 
Выбираем в качестве «наилучшего» значения           ⃗⃗⃗⃗⃗⃗⃗⃗ 
 ту хромосому из популяции, значение 
целевой функции которой минимально. Запоминаем соответствующее этой хромосоме значение 
целевой функции           . 
Сбрасываем счетчик числа итераций: k = 0. 
Шаг 3. Проверяем условие продолжения итерационного цикла. 
Пока k ≤ N и r ≤    выполняем шаги 3-9, иначе переходим на шаг 10. 
Для продолжения цикла в данном алгоритме анализируются одновременно оба из 
критериев останова. 
Шаг 4. Выбираем случайным образом две хромосомы для скрещивания: 
      ⃗⃗⃗⃗ 
(p
1
(   )
,p
2
(   )
…p
   (   )
)  и       
⃗⃗⃗⃗⃗ 
(p
1
(   )
,p
2
(   )
…p
   (   )
), такие что 1 ≤ α,β ≤ r и α≠β. 
Шаг 5. В цикле по j от 1 до n генерируем случайные числа       (критерий выбора родителя 
для текущего гена) из диапазона {1,2} и χ
   (критерий, определяющий, мутирует текущий ген 
или нет) из диапазона {1,100}. Каждый ген новой хромосомы X
⃗ ⃗ 
(   1
,   2
…      ) получаем по 
следующему правилу: 
      = {
p
   (   )
,если       = 1
p
   (   )
,если       = 2
          (4) 
Если χ
   ≤    , то генерируем случайным образом мутирующее приращение гена    ∈    и 
выполняем мутацию:       =       +    
Шаг 6. Произведем расчет целевой функции F
x
 хромосомы X
⃗ ⃗ 
. Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  6 
Шаг 7. Проверяем условие включение хромосомы в популяцию. 
Если       ≤    ∙           , то: 
 1) увеличиваем размер популяции    =    + 1; 
 2) заносим хромосому X
⃗ ⃗ 
 в популяцию P и присваиваем ей номер r:  
       ⃗⃗⃗ 
 (значение соответствующей ей целевой функции       ). 
Иначе переходим на шаг 9. 
Шаг 8. Проверяем полученную хромосому на оптимум: 
Если       <           , то:            ⃗⃗⃗⃗⃗⃗⃗⃗ 
=       ⃗⃗⃗ 
  
 
и 
 
          =       
Шаг 9. Увеличиваем счетчик числа итераций:    =    + 1. 
Закрываем цикл, переходим на шаг 3. 
Шаг 10. В качестве результирующей выводим хромосому           ⃗⃗⃗⃗⃗⃗⃗⃗ 
 со значением целевой 
функции           . 
 
4 Практическая апробация алгоритма 
Покажем эффективность предлагаемого алгоритма на ряде тестов. 
Тест № 1. 
Рассмотрим дифференциальное уравнение, имеющее простое аналитическое решение: 
          
= −0,36     при начальном условии    0
= 10. 
Решение данного уравнения будет иметь вид: 
   = 10∙    −0,36    
          
= −3,6 ∙    −0,36    
Представим результаты аналитического решения для n=10 в виде таблицы 1. 
Таблица 1. Аналитическое решение 
t x 
           
0 10,00000000000000 -3,60000000000000 
0,2 9,30530895811206 -3,34991122492034 
0,4 8,65887748059205 -3,11719589301314 
0,6 8,05735301873480 -2,90064708674453 
0,8 7,49761592239041 -2,69914173206055 
1 6,97676326071031 -2,51163477385571 
1,2 6,49209376685147 -2,33715375606653 
1,4 6,04109382855865 -2,17479377828111 
1,6 5,62142445196822 -2,02371280270856 
1,8 5,23090913102501 -1,88312728716900 
2 4,86752255959972 -1,75230812145590 Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  7 
Найдем численные решения методами Рунге-Кутта и Адамса-Башфорта 4 порядка. Для 
сравнения будем дополнительно вычислять производную по t в каждой точке 
(при 0 < i ≤ n) как: 
             
=
      −      −1
ℎ
  Результаты представим в виде таблицы 2. 
Таблица 2. Численные решения для тестового примера № 1 
t 
Метод Рунге-Кутта 4 порядка Метод Адамса-Башфорта 4 порядка 
x 
           
x 
           
0 
10,00000000000000 -3,60000000000000 10,00000000000000 -3,60000000000000 
0,2 
9,30530911744000 -3,47345441280000 9,28000000000000 -3,60000000000000 
0,4 
8,65887777711120 -3,23215670164401 8,63776000000000 -3,21120000000000 
0,6 
8,05735343261515 -3,00762172248027 8,03662912000000 -3,00565440000000 
0,8 
7,49761643589502 -2,79868498360063 7,47938883520000 -2,78620142400000 
1 
6,97676385800019 -2,60426288947414 6,95954167163200 -2,59923581784000 
1,2 
6,49209443380750 -2,42334712096343 6,47622280732312 -2,41659432154440 
1,4 
6,04109455261904 -2,25499940594230 6,02626174552647 -2,24980530898325 
1,6 
5,62142522198031 -2,09834665319367 5,60765436741004 -2,09303689058213 
1,8 
5,23090993711006 -1,95257642435127 5,21808661926677 -1,94783874071637 
2 
4,86752339302977 -1,81693272040143 4,85560011216362 -1,81243253551577 
 
Значения целевых функций для данных методов составят: 
F
A 
= 0,135902128694391 
F
R 
= 0,0868429272578514 
Проведем описанные выше генетические операции над векторами A 
⃗⃗⃗ 
 и R
⃗ ⃗ 
 при 
σ = 20 %, D = [-10
-7
,
-10
-12
] U [10
-12
,
10
-7
], N = 10
6
, ρ = 1000, Ω = 1 . Результат представим в 
таблице 3.  
Таблица 3. Генетическое решение для тестового примера № 1 
t x 
           
0 10,00000000000000 -3,60000000000000 
0,2 9,31952663748075 -3,40236681259623 
0,4 8,68263816322332 -3,18444237128718 
0,6 8,08921590592625 -2,96711128648536 
0,8 7,53690189821632 -2,76157003854961 
1 7,02244712643182 -2,57227385892252 
1,2 6,54707896690261 -2,37684079764606 
1,4 6,10439438117813 -2,21342292862240 
1,6 5,68719672556603 -2,08598827806050 
1,8 5,30081134451833 -1,93192690523848 
2 4,94256049672144 -1,79125423898445 Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  8 
Значение целевой функции при генетической модификации решения составит 
0,0158318110009678 (это составляет 18,23 % от F
R 
и 11,65 % от F
A
), что говорит о существенном 
улучшении результата по сравнению с численными методами. 
Тест № 2. 
Рассмотрим дифференциальное уравнение, аналитическое решение которого не может 
быть найдено традиционными способами, так как имеется вложенность функций разного типа: 
синуса, квадратного корня и логарифма: 
          
= sin   √   +
ln(   +1)
   +2
  при начальном условии    0
= 1. 
Покажем численные решения в таблице 4, а генетическое – в таблице 5. 
Таблица 4. Численные решения для тестового примера № 2 
x 
Метод Рунге-Кутта 4 порядка Метод Адамса-Башфорта 4 порядка 
y 
           
y 
           
0 
1,000000000000000 0,000000000000000 1,000000000000000 0,000000000000000 
0,2 
0,987684942694111 -0,061575286529444 1,000000000017960 0,000000000089794 
0,4 
0,960665181718217 -0,135098804879468 0,961827806529341 -0,190860967443095 
0,6 
0,928262775028065 -0,162012033450760 0,924204885381551 -0,188114605738949 
0,8 
0,895392573338708 -0,164351008446785 0,888166351824188 -0,180192667786814 
1 
0,864607442923070 -0,153925652078191 0,859694397613300 -0,142359771054442 
1,2 
0,837123990505824 -0,137417262086231 0,832013338110466 -0,138405297514171 
1,4 
0,813385508979084 -0,118692407633699 0,810887873973837 -0,105627320683143 
1,6 
0,793393033819791 -0,099962375796466 0,790216341305062 -0,103357663343874 
1,8 
0,776907432925449 -0,082428004471709 0,775849180865059 -0,071835802200016 
2 
0,763573754075734 -0,066668394248577 0,761434247563319 -0,072074666508702 
Таблица 5. Генетическое решение для тестового примера № 2 
t x 
          
0 1,000000000000000 0,000000000000000 
0,2 0,980880925301650 -0,095595373491753 
0,4 0,952690965389483 -0,140949799560834 
0,6 0,921651623883888 -0,155196707527971 
0,8 0,890977008021583 -0,153373079311527 
1 0,862581735569793 -0,141976362258952 
1,2 0,836967293653362 -0,128072209582155 
1,4 0,814705549971125 -0,111308718411183 
1,6 0,795577212380744 -0,095641687951905 
1,8 0,779630055883959 -0,079735782483926 
2 0,766780930058021 -0,064245629129690 
 Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  9 
Генетические операции над векторами A 
⃗⃗⃗ 
 и R
⃗ ⃗ 
 проведены при следующих параметрах: 
σ = 50 %, D = [-10
-9
,
-10
-12
] U [10
-12
,
10
-9
], N = 10
6
, ρ = 1000, Ω = 1 . 
Получены следующие значения целевых функций: 
1) 0,0200090107188308 – для метода Адамса-Башфорта 4 порядка; 
2) 0,00304549826174715 – для метода Рунге-Кутта 4 порядка; 
3) 0,0000168395901393521 – для генетического решения. 
Видим, что генетическое решение на 99,9 % точнее метода Адамса-Башфорта 4 порядка 
и на 99,4% - метода  Рунге-Кутта 4 порядка. 
Тест № 3. 
Рассмотрим дифференциальное уравнение: 
          
= sin   +     при начальном условии    0
= 0. 
Аналитически получаем решение: 
   =
1
2
(      − sin   − cos   )  
          
=
1
2
(      − cos   + sin   )  
Проведем вычисления при условии: 
σ = 10 %, D = [-10
-8
,
-10
-13
] U [10
-13
,
10
-8
], N = 10
6
, ρ = 1000, Ω = 1,01. Представим сводные 
результаты в упрощенном виде (без  
    
    
) в таблице 4. 
Таблица 4. Сводные результаты в упрощенной форме (тестовый пример № 3) 
x 
Аналитическое 
решение 
Метод Рунге-Кутта  
4 порядка 
Метод Адамса-
Башфорта 4 порядка 
Генетически 
модифицированное 
решение 
0 0,0000000000000000 0,0000000000000000 0,0000000000000000 0,0000000000000000 
0,2 0,0213334247619336 0,0213311010791347 0,0000000000000000 -0,0089637759326714 
0,4 0,0906726806648674 0,0906668594574997 0,0596007992385184 0,0358359022620977 
0,6 0,2160703560428980 0,2160595877522830 0,1787463152862500 0,1430878585218740 
0,8 0,4057390641228900 0,4057215595132670 0,3599548091662920 0,3252598085674210 
1 0,6682542688915050 0,6682278150708570 0,6117701860955730 0,5912899252772450 
1,2 1,0128600411463200 1,0128218920233500 0,9436963044546630 0,9508326702102220 
1,4 1,4498915469779900 1,4498382813368000 1,3653148177396900 1,4181250257540500 
1,6 1,9913291718274500 1,9912565106206800 1,8877963786813000 2,0115730554304800 
1,8 2,6515009641139200 2,6514035366052600 2,5247403752335700 2,7534826001274400 
2 3,4479527543260500 3,4478238002542400 3,2927752182889500 3,6658149102710300 
 
Значения целевых функций при этом составят: 
F
A 
= 0,561995559382038 
F
R 
= 0,561790337892653 Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  10 
F
opt 
= 0,166977305706529 
Как видно, F
opt
 всегда меньше 30% от значений целевых функций численных решений, 
что подтверждает эффективность предлагаемого метода.  
Построим для данного уравнения графики зависимости значения целевой функции 
генетически модифицированного решения от входных параметров: σ (рисунок 1), ρ (рисунок 2), 
D (рисунок 3), N (рисунок 4), Ω (рисунок 5) и n (рисунок 6). Для каждого набора параметров 
проведем до 10 испытаний и выберем в качестве F
opt
 усредненное значение полученных на 
каждом испытании целевых функций. 
 
Рисунок 1 – Выбор наиболее оптимального значения процента мутирующих ген новой 
хромосомы (σ) 
 
Рисунок 2 – Выбор наиболее оптимального размера популяции (ρ) Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  11 
 
Рисунок 2 – Выбор наиболее оптимального диапазона дисперсии мутации (D) 
 
Рисунок 4 – Выбор наиболее оптимального числа итераций (N) Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  12 
 
Рисунок 5 – Выбор наиболее оптимального критерия включения хромосомы 
в популяцию (Ω) 
 
Рисунок 6 – Выбор наиболее оптимального числа точек дискретизации (n)  Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  13 
Во всех проведенных вычислениях использовался 4-ядерный 64-разрядный процессор 
Intel частотой ядра 2,1 ГГц и оперативной памятью 8 ГБ. Время вычислений на всех тестах не 
превышало 2 сек. 
Заключение 
Проведенный эксперимент позволяет сделать следующие выводы: 
1) Метод уточнения численных решений обыкновенных дифференциальных уравнений 
генетическими преобразованиями позволяет существенно уменьшить значение целевой 
функции сравнительно с классическими методами, что говорит о его эффективности. 
Приближение результата к аналитическому решению в ряде случаев составляет на 50-90 % по 
сравнению с классическими методами. 
2) Наиболее оптимальными параметрами работы предлагаемого алгоритма являются: 
- процент мутирующих ген новой хромосомы σ = 40%; 
- дисперсия мутации D = [-10
-8
,
-10
-13
] U [10
-13
,
10
-8
]; 
- размер популяции ρ = 2000; 
- число итераций N = 500 ρ; 
- критерий включения хромосомы в популяцию Ω = 0,95; 
- число точек дискретизации n влияет на значение целевой функции обратно 
пропорционально и может быть выбрано исходя из вычислительных возможностей системы 
(желательно не менее 100). 
3) Областью применения предлагаемого алгоритма являются задачи экономики, 
статистики, электроники, техники и других областей, решение которых сводится к составлению 
дифференциальных уравнений; 
4) Так как шаги 3-9 описанного алгоритма могут выполняться независимо над любыми 
случайными парами хромосом из популяции, то возможно применение параллельных 
вычислений при реализации предлагаемого подхода. 
В своих предыдущих работах [13-15] авторы настоящего исследования показали 
возможность применения данного метода для уточнения решений других численных 
алгоритмов, что позволяет говорить об универсальности и актуальности применения метода 
уточнения численных решений обыкновенных дифференциальных уравнений генетическими 
преобразованиями. 
Список литературы 
1. Barricelli, Nils Aall. Symbiogenetic evolution processes realized by artificial methods. 
Methodos. 1957. pp. 143–182. Дифференциальные уравнения и процессы управления, №2 , 2017 
 
Электронный журнал. http://www.math.spbu.ru/diffjournal  14 
2. Fraser, Alex. Simulation of genetic systems by automatic digital computers. I. 
Introduction. Aust. J. Biol. Sci. 10. 1957. pp. 484–491. 
3. Losee R.M. An introduction to genetic algorithms. Information Processing & Management. 
1997. Т. 33. № 3. p. 407. 
4. Schlapfer M.F.  A comparison of genetic and other algorithms for the traveling salesman 
problem. 1998 
5. Gaspin Ch., Schiex T. Genetic algorithms for genetic mapping. Lecture Notes in Computer 
Science. 1998. Т. 1363. p. 145. 
6. Панченко, Т. В. Генетические алгоритмы. Астрахань: Издательский дом 
«Астраханский университет», 2007. – 87 с. 
7. Mitchell Melanie A. An Introduction to Genetic Algorithms. Bradford Book. The MIT 
Press Cambridge, Massachusetts, London, England Fifth printing, 1999. 
8. David A Coley. An introduction to genetic algorithms for scientists and engine. World 
Scientific Publishing Co. Pte. Ltd. 1999. 223 p. 
9. Chen, C. L., Chang, M. H. An enhanced genetic algorithm. In Proc. EUFIT’93 (1993), vol. 
II, pp. 1105–1109. 
10. Forrest S., Mitchell M. What makes a problem hard for a genetic algorithm? some 
anomalous results and their explanation. Machine Learning. 1993. Т. 13. № 2-3. pp. 285-319. 
11. Поллак Г.А. Применение генетических алгоритмов для обучения нейронных сетей // 
НАУКА ЮУрГУ Материалы 63-й научной конференции. Южно-Уральский государственный 
университет. 2011. C. 174-178. 
12. Ле К.Х., Суркова Н.Е., Остроух А.В.  Генетические алгоритмы в задачах 
рациональной организации информационно-вычислительных процессов / Автоматизация и 
управление в технических системах. 2014. № 4 (12). С. 82-99. 
13. Таран В.Н., Долженко А.М., Рыбалко К.К. Анализ эффективности метода уточнения 
численных решений обыкновенных дифференциальных уравнений генетическими 
преобразованиями / Научный вестник. 2016. № 3 (9). С. 153-162. 
14. Таран В.Н., Бойко Е.Ю., Долженко А.М. Модификация жадного алгоритма 
генетическими преобразованиями. Свидетельство о регистрации программ ЭВМ от 18.01.2017 
№ 2017610869. 
15. Долженко А.М., Бутрина Е.Г. Уточнение решений задачи коммивояжера 
генетическими мутациями / Вестник Пермского университета. Серия: Математика. Механика. 
Информатика. 2013. № 2 (21). С. 9-15. 
