dx
✻ dt
.............
. . . . . . . . .
. . . . . . . . . .
........
. . . . . . . .
. . . . . . . . .
. . . . . . . . . . .
. . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . .
. . . . . . . . . . .
. . . . . . . . .
. . . . . . . .
. . . . . . . .
. . . . . . . . . .
..................... .........................
. . . . . . . . . .
. . . . . . . . .
........
...........
. . . . . . . . . . .
. . . . . . . . . . . .
✛ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
✲. . . . . . . . . . . . . . . . . . . . .
. . . . . . . .
. . . . . . .
......
........
. . . . . . . .
.............. ........................
. . . . . . . . . . . .
. . . . . . . . . .
..........
. . . . . . . .
. . . . . . . . . .
. . . . . . . . . . .
. . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . .
. . . . . . . . . . .
. . . . . . . . . . .
. . . . . . . .
. . . . . . . . . .
. . . . . . . . . .
......................... .............................
. . . . . . . . . .
. . . . . . . . .
. . . . . . . . . .
..........
............
. . . . . . . . . . .
. . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . .
. . . . . . . .
.......
. . . . . .
.................. ❄
ДИФФЕРЕНЦИАЛЬНЫЕ УРАВНЕНИЯ
И
ПРОЦЕССЫ УПРАВЛЕНИЯ
N 4, 2006
Электронный журнал,
рег. N П2375 от 07.03.97
ISSN 1817-2172
http://www.neva.ru/journal
http://www.math.spbu.ru/user/diffjournal/
e-mail: jodiff@mail.ru
Моделирование динамических систем
Применение методов интервальной арифметики
к задаче построения символического образа
Н. Б. Ампилова, С. В. Терентьев
Россия, 198504, Университетский пр. д.28
Санкт-Петербургский Государственный Университет
Математико-механический факультет
e-mail: nataly@is1483.spb.edu, waterq@yandex.ru
Аннотация
При численном исследовании и моделировании динамических систем
используется разбиение фазового пространства на ячейки. Такую ячейку
удобно интерпретировать как интервальный вектор в пространстве
соответствующей размерности и использовать аппарат интервальных
вычислений.
В работе описан алгоритм построения символического образа дискретной
динамической системы с помощью методов интервальной арифметики.
Приводится ряд примеров и сравнение с методами, реализованными в
обычной арифметике.
1 Введение
Одним из хорошо известных методов исследования динамических
систем является построение по исходной системе ее аппроксимации —
символического образа. По выбранному покрытию фазового пространства
строится ориентированный граф, вершины которого соответствуют ячейкам
покрытия, а дуги отвечают непустым пересечениям ячеек с их образами
Дифференциальные уравнения и процессы управления,N. 4, 2006
при действии системы. Символический образ зависит от покрытия.
Последовательное подразбиение ячеек покрытия позволяет получить более
точное приближение к системе.
Такая конструкция позволяет применять алгоритмы на графах
для получения многих важных характеристик динамической системы:
инвариантных множеств и их изолирующих окрестностей, спектра Морса,
энтропии.
Реализации алгоритмов построения символического образа основываются
на так называемых set-oriented методах, в которых выбирается конечное
покрытие исследуемой области фазового пространства и строятся
приближения образов элементов (ячеек) покрытия. Любой подобный
метод связан с построением некоторого множества в фазовом пространстве,
которое наилучшим образом аппроксимировало бы образ ячейки. [4], [2]).
В работе [4] выбирается заданное число точек в каждой ячейке, их
образы составляют образ ячейки. Основными стратегиями выбора являются
однородное распределение точек внутри ячейки и выбор точек в окрестности
границы.
В работе [2] рассматриваются линейный и точечный методы. Точечный
метод выбирает равномерно разбросанные точки и в качестве образа ячейки
строит объединение ячеек, содержащих образы точек. Линейный метод
в качестве образа рассматривает наименьший n-мерный параллелепипед,
ориентированный по осям координат, содержащий образы вершин ячейки.
Нам кажется естественным рассматривать ячейку фазового пространства
как интервальный вектор в пространстве соответствующей размерности и
использовать аппарат интервальной арифметики для реализации алгоритма
построения образа ячейки. В отличие от обычной арифметики такой
подход позволяет частично снять проблему с ошибками округления,
поскольку мы всегда работаем не с числом, а с его окрестностью.
При использовании интервальной арифметики может возникнуть так
называемая проблема завышения результата, связанная с особенностью
вычисления арифметических выражений: вхождения в формулу одной
переменной трактуются как разные переменные. Специальная форма
записи арифметических выражений помогает обойти это затруднение.
Определенные трудности могут возникнуть при реализации интервальной
арифметики в машинной. Здесь нужно вводить некоторые условия на
характер машинного представления чисел. Как показано в [6], если
интервальная функция удовлетворяет условию Липшица, то результат
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 51
Дифференциальные уравнения и процессы управления,N. 4, 2006
вычислений в округленной интервальной арифметике стремится к результату
вычислений в точной интервальной арифметике, когда машинная точность
стремится к бесконечности. Иными словами, при подходящем выборе
машинного представления результаты вычислений в арифметике машины
имеют погрешность, зависящую от погрешности представления.
Разработан и реализован алгоритм построения символического образа с
использованием библиотеки интервальных вычислений. Для интервальных
функций вычисляются оценки констант Липшица. Приведены примеры,
а также сравнительные характеристики работы алгоритма и алгоритмов,
описанных в работе [2].
2 Интервальная арифметика
Мы приведем основные сведения из интервальной арифметики, которые
потребуются в дальнейшем. Подробное изложение можно найти в [6].
Определение 1 Интервалом называется множество вида :
x = [x, x] = {x ˜ ∈ R | x ≤ x ˜ ≤ x} .
Радиус интервала x определяется следующим образом:
rad(x) = (x − x)
2
.
Пространство всех интервалов над R обозначается IR. На множестве IR
вводится отношение частичного порядка. Пусть x, y ∈ IR, тогда
x ≤ y ⇔ x ≤ y.
Определение 2 Пусть x1, . . . , xm ∈ IR. Тогда интервальным вектором
называется множество
x ˘ = (x1, . . . , xm).
Радиус интервального вектора определяется как
rad(˘ x) = (rad(x1), . . . , rad(xm)), x1, . . . , xm ∈ IR.
На пространстве всех интервальных векторов ( IRm ) вводится отношение
частичного порядка. Пусть x, ˘ y ˘ ∈ IRm, тогда
x ˘ ≤ y ˘ ⇔ x ˘ ≤ y ˘,
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 52
Дифференциальные уравнения и процессы управления,N. 4, 2006
где
x ˘ = sup(x1, . . . , xm)
y ˘ = inf(y1, . . . , ym).
Нетрудно заметить, что интервальный вектор имеет довольно естественное
геометрическое представление: прямое произведение составляющих его
интервалов.
Определение 3 Пусть a, b ⊂ IR. Тогда функция
q(a, b) = sup |a − b| ,  a − b 
задает расстояние между интервалами a и b.
Легко проверить, что так введенное расстояние является метрикой на IR.
В пространстве IRm функция q определяется покомпонентно на интервалах.
Заметим, что метрика q, вводимая на множестве интервалов, определяется и
в том случае, когда интервалы пересекаются или содержатся один в другом,
и в этом смысле отличается от расстояния между множествами. В случае
непересекающихся интервалов она задает расстояние между множествами.
Вводится операция  — построение оболочки множества из R(Rm). Пусть
a ⊂ R — непустое ограниченное множество. Тогда
 a = [ inf(a) , sup(a) ] .
Иначе говоря, "" является операцией построения минимального интервала,
содержащего множество a.
Пусть a ⊂ Rm — непустое ограниченное множество.Тогда
 a = [ inf(a1) , sup(a1) ] × . . . × [ inf(am) , sup(am) ] ,
где ai — проекция множества a на i-ую ось, i = 1, . . . , m.
Обозначим через Ω = { + , − , ∗ , / , ∗∗ } множество элементарных
операций в интервальной арифметике.
Для x, y ∈ IR определим
x ◦ y =  {x ˜ ◦ y ˜ | x ˜ ∈ x, y ˜ ∈ y} , ◦ ∈ Ω.
Для x, ˘ y ˘ ∈ IRm определим
x ˘ ◦ y ˘ =  { [x1 ◦ y1] × . . . × [xm ◦ ym] | xi ∈ x, y ˘ i ∈ y ˘} , i ∈ {1, . . . , m} .
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 53
Дифференциальные уравнения и процессы управления,N. 4, 2006
Вводится некоторое множество функций (Φ), называемых элементарными,
которые являются вещественными функциями, непрерывными на
каждом замкнутом интервале задания. Как правило, первоначально
Φ = { sqr, sqrt, ln, exp, sin, cos } и может быть расширено в процессе
работы.
Для построения функций на интервалах (и интервальных векторах ) —
интервальных функций — вещественная прямая и множество интервалов
расширяются с помощью символа ω(неопределенность):
R∗ = R ∪ {ω} ; IR∗ = IR ∪ {ω} .
При этом предполагается, что ω больше любого вещественного числа.
Любая функция ϕ ∈ Φ расширяется на интервальный аргумент
следующим образом:
ϕ ˘(x) =  {ϕ(˜ x) | x ˜ ∈ x} , x ∈ IR.
При выполнении некоторых условий монотонности интервальные
функции есть расширение вещественных. Достаточно большой класс таких
функций вводится с помощью арифметических выражений. Арифметическое
выражение от формальных переменных (ξ1, . . . , ξm) вводится как множество,
содержащее R, множество переменных ξ1, . . . , ξm, а также комбинации
и композиции функций из Φ и элементарных операций из Ω. Для
арифметического выражения f = f(ξ1, . . . , ξm) значение f в точке
x = (x1, . . . , xm) ∈ IRm получается подстановкой интервалов xl для
соответствующих формальных параметров ξl, для l = 1, . . . , m.
3 Вычисление арифметических выражений
в компьютерной арифметике
При реализации операций интервальной арифметики в арифметике машины
нужно учитывать, что последняя представляет только конечное множество
чисел. Обозначим его H ⊆ R и введем операцию оптимального внешнего
округления 	.
Определение 4 Пусть x ∈ IR, тогда 	x есть минимальный интервал с
координатами из H, содержащий x.
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 54
Дифференциальные уравнения и процессы управления,N. 4, 2006
Определение 5 Пусть f — интервальная функция, заданная арифметическим
выражением. Определим оператор "	"следующим образом:
• f = const, тогда 	 f = const ;
• f =переменная, тогда 	 f =переменная ;
• f = g ◦ h, тогда 	f = 	(	g ◦ 	h), где ◦ ∈ Ω;
• f = ϕ(g), тогда 	f = 	ϕ(	g), где ϕ ∈ Φ.
Интервальные функции f и 	f обладают следующим свойством:
{f(˜ x) | x ˜ ∈ x} ⊆ f(x) ⊆ 	f(x)
для x из области определения f.
Для минимизации погрешности вычислений делаются определенные
предположения о характере представления чисел в машинной арифметике.
В частности, в работе [6] показано, что при представлении чисел в формате
с плавающей точкой, результат полученный с использованием операции
	, может быть оценен через величины, связанные с этим представлением.
Иными словами, результат операции округления остается в множестве H.
Вычисления функций в интервальной арифметике с учетом машинного
представления опираются на следующий результат [6].
Теорема 1 При условии, что функция f задана арифметическим
выражением от m переменных и удовлетворяет условию Липшица в
x ∈ IRm, найдутся такие положительные числа cf и εf, что для любой
округленной интервальной арифметики с относительной погрешностью
ε ≤ εf функция f 	(x) определена и удовлетворяет неравенству
q(f 	(x), f(x)) ≤ cfε.
4 Символический образ динамической системы
Пусть M — замкнутое и ограниченное подмножество в Rq. Рассмотрим
дискретную динамическую систему, порожденную гомеоморфизмом
f : M → M. Пусть C = {M1, . . . , Mn} — покрытие компакта M замкнутыми
множествами. Множества {M1, . . . , Mn} назовем ячейками. По множеству
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 55
Дифференциальные уравнения и процессы управления,N. 4, 2006
M и гомеоморфизму f построим ориентированный граф G следующим
образом: ячейке Mi сопоставим i-ую вершину графа. Между вершинами i и
j есть ориентированное ребро, если f(Mi) ∩ Mj = ∅. Такой ориентированный
граф называется символическим образом отображения f относительно C.
Для каждого i определим подпокрытие Ci = {Mj|Mj ∩ f(Mi) = ∅} ,
множество ci = {j|Mj ∩ f(Mi) = ∅} и множество Ri = j∈ci Mj.
Обозначим за diam(Mi) := max {ρ(x, y)|x, y ∈ Mi} диаметр ячейки Mi.
Наибольший из диаметров ячеек, обозначаемый d , называется диаметром
символического образа.
Из построения d следует, что справедливы следующие включения :
f(Mi) ⊆ Ri ⊆ {x|ρ(x, y) ≤ d, y ∈ f(Mi)} (1)
Если ячейка Mk не принадлежит Ci, то определим расстояние между
образом f(Mi) и ячейкой Mk:
rik = ρ(f(Mi), Mk) = min {ρ(x, y), x ∈ f(Mi), y ∈ Mk}
и положим
r = min
i,k rik.
Число r называется нижней гранью символического образа. Диаметр и
нижняя грань являются основными параметрами символического образа и
зависят от выбора покрытия.
Справедливо следующее
Утверждение 1 [1]
1. r ≤ d.
2. { x | ρ(x, f(Mi)) < r } ⊆ Ri.
3. Если x ∈ M
j и ρ(x, f(Mi)) < r , то ячейка Mj принадлежит
подпокрытию Ci.
Учитывая геометрический смысл интервальных векторов, удобно
интерпретировать ячейки фазового пространства как интервальные вектора
соответствующей размерности. Обозначим за M ˘i интервальный вектор,
соответствующий ячейке Mi.
Тогда Ci = M ˘j|M ˘j ∩ f(M ˘i) = ∅ , ci = j|M ˘j ∩ f(M ˘i) = ∅ и R ˘i = j∈ci M ˘j.
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 56
Дифференциальные уравнения и процессы управления,N. 4, 2006
Диаметром ячейки назовем diam(M ˘i) = maxj∈[1,m]{2rad(M ˘i)}j и обозначим
через d наибольший из таких диаметров. Образ интервального вектора
есть интервальный вектор, поэтому мы всегда работаем с n-мерными
параллелепипедами в фазовом пространстве размерности n. Расстояние
между ячейками естественно определять в обычном смысле расстояния
между множествами. Таким образом, смысл величины r сохраняется.
5 Алгоритм построения символического образа
с помощью интервальной арифметики
Основной задачей при построении символического образа является
построение образа ячейки при действии исходной системы. Эта процедура
реализуется с использованием библиотеки интервальных функций.
Символический образ дает все более точное приближение поведения
системы при последовательном измельчении разбиения. Поэтому алгоритм
подразумевает построение последовательности символических образов.
Отметим, что в предлагаемом нами алгоритме мы фактически не строим
граф, а работаем с множеством, содержащим ячейки, участвующие в
формировании символического образа.
Пусть f : M ˘ → M ˘ — гомеоморфизм на компакте M ˘ ⊆ IRq. Пусть
C0
= M ˘1, . . . , M ˘n — начальное покрытие компакта M ˘ ячейками
˘Mi
⊆ IRq; i = 1, . . . , n. Для каждой ячейки M ˘i вычислим множества
R ˘i. Построим множество-представление графа G, соответствующее
символическому образу G отображения f относительно покрытия C0, а
именно GC0 = i∈[1,n] R ˘i. Это множество содержит все ячейки покрытия,
которые участвуют в формировании графа G.
На следующем шаге разбиение применяется к элементам множества
GC0, в результате повторения описанной процедуры получается множествопредставление GC1 для графа G1. На k-ом шаге мы рассматриваем разбиениe
вида
Ck
= M ˘j1, . . . , M ˘jm | M ˘jl ⊂ Gk−1
и строим соответствующее множество-представление GCk.
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 57
Дифференциальные уравнения и процессы управления,N. 4, 2006
5.1 Представление ячейки.
В реализации алгоритма рассматриваются ячейки одного размера и
целочисленная система координат, единица длины в которой есть размер
ячейки. Это позволяет представить ячейку точкой ее левого верхнего угла
единственным образом. Такое представление ячейки позволяет уменьшить
объем памяти, требуемой для хранения данных.
5.2 Временная сложность алгоритма
При работе алгоритма основными операциями являются вычисление
множеств R ˘i, добавление их в множество GCk и вычисление значения
функции на интервальном векторе. Операция добавления требует O(m)
шагов, где m — количество элементов в множестве GCk. Вычисление
R ˘i сводится к вычислению функции f(M ˘i) и нахождению пересечения
полученного образа с C0. В свою очередь вычисление функции заключается
в вычислении выражения по дереву разбора этого выражения. Так как
в реализации алгоритма используется целочисленная система координат,
то операция пересечения сводится к сравнению целых чисел. Поэтому
вычисление R ˘i происходит за O(m1 + m2), где O(m1) — время вычисления
выражения, O(m2) — время определения пересечения. Эти операции
выполняются для каждой из n ячеек покрытия. В итоге время работы
алгоритма оценивается как O((m1 + m2)n) = O(n).
5.3 Сравнение алгоритма с точечным и линейным методами
Наиболее часто используемые методы построения образа ячейки ( [2], [4]) в
качестве аппроксимации образа получают некоторое множество. Сложность
алгоритмов имеет порядок n или n log n, где n — число элементов покрытия.
В интервальном методе образом ячейки является интервальный вектор,
который является результатом вычисления значения функции системы на
ячейке и применения к ней операции "". Эта операция строит наименьшее
множество, содержащее результат.
Отметим, что в отличие от указанных работ мы не используем
традиционную списочную структуру для хранения графа, а реализуем
его представление с помощью задания ячейки в целочисленной системе
координат. Как уже было отмечено, интервальный метод позволяет
получить строгие оценки ошибок округления для элементарных операций.
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 58
Дифференциальные уравнения и процессы управления,N. 4, 2006
Следует отметить, что современные реализации интервальной арифметики с
оптимальным округлением при представлении чисел в формате с плавающей
точкой поддерживают полубесконечные и бесконечные интервалы. Кроме
того, применение этого метода позволяет вычислять значение константы
Липшица для функции, задающей систему, по рекуррентной формуле
параллельно с основными вычислениями.
В таблице 1 приведены результаты сравнения работы алгоритма
с точечным и линейным методами [2]. Все вычисления использовали
следующую аппаратную и программную конфигурацию:
• CPU: Intel Pentium 4 3Ghz
• Memory: 1 Gb
• OS: Microsoft Windows XP SP2.
В следующем далее тексте k1 и k2 обозначают ранг дробления ячеек по
размерностям x и y соответственно, k — число последовательных итераций.
6 Примеры
6.1 Отображение Хенона
x1 = 1 − 1.4x2 + y, y1 = 0.3x.
У этой системы существует инвариантное множество в области
[−1.5, 1.5] × −10 3 , 10 3  .
M ˘ = [−1.5, 1.5] × [−10, 10] ,
k1 = 1000, k2 = 1000, k = 5.
Время работы — 40 сек. Инвариантное множество показано на рис.1.
6.2 Отображение Икеда [5]
x1 = 2 − 0.9 (xcosτ(x, y) − ysinτ(x, y)) ,
y1 = 0.9 (ycosτ(x, y) + xsinτ(x, y)) ,
где
τ(x, y) = 0.4 − 6
1 + x2 + y2.
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 59
Дифференциальные уравнения и процессы управления,N. 4, 2006
Рис. 1. Аттрактор Хенона
Вычисления проводились в области M ˘ = [−10, 10] × [−10, 10]. Результат
построения инвариантного множества показан на рис.2; k1 = k2 = 1000, k =
86. Время работы — 51 сек.
6.3 Отображение с задержкой
x1 = y, y1 = ay(1 − x).
Система обладает двумя неподвижными точками O1 = (0, 0) и
O2 = (1 − a 1, 1 − a 1). Начало координат является седловой точкой при a > 1.
Собственные числа в точке O1 равны 0 и a. Точка O2 является фокусом
при a > 5 4. Собственные числа в этой точке равны λ1,2 = 1 2 	1 ± √5 − 4a
 .
Фокус устойчив при a > 2, а при a > 2 фокус теряет устойчивость через
бифуркацию Хопфа. Возникающая при этой бифуркации инвариантная
кривая разрушается при a = 2.27 с появлением странного аттрактора [3].
Вычисления проводились в области M ˘ = [−1.5, 1.5] × [−10, 10] для
k1 = 3200, k2 = 3200. На рисунках 3,4 и 5 показаны приближения
к инвариантному множеству системы для a = 2.27 при значениях k
равных 3, 15 и 22 соответственно. Последнее значение k дает довольно
стабильное состояние, а именно, при дальнейшем увеличении числа итераций
изображение не меняется. Время работы для этого значения составляет 22
мин 30 сек. Такое увеличение времени связано со сложной структурой
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 60
Дифференциальные уравнения и процессы управления,N. 4, 2006
Рис. 2. Инвариантное множество отображения Икеда
инвариантного множества, а именно при a = 2.27 неустойчивая сепаратриса
седловой неподвижной точки касается устойчивой. Моделирование этой
ситуации требует большого числа итераций и достаточно мелкого разбиения.
Алгоритм может быть улучшен за счет выбора формы области фазового
пространства и оптимизации вычислений. Структура инвариантного
множества вблизи седловой неподвижной точки показана на рис. 6.
Таблица 1
Отображение Хенона Отображение Икеда
метод время работы время работы
Линейный 24 047 ms 172 484 ms
Точечный 40 656 ms 112 359 ms
Интервальный 40 000 ms 51 000 ms
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 61
Дифференциальные уравнения и процессы управления,N. 4, 2006
Рис. 3. a = 2.27. Инвариантное множество после 3 итераций
Рис. 4. a = 2.27. Инвариантное множество после 15 итераций
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 62
Дифференциальные уравнения и процессы управления,N. 4, 2006
Рис. 5. a = 2.27. Инвариантное множество после 22 итераций
Рис. 6. a = 2.27. Инвариантное множество в окрестности седловой точки
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 63
Дифференциальные уравнения и процессы управления,N. 4, 2006
Список литературы
[1] Г.С. Осипенко, Н.Б. Ампилова. Введение в символический анализ
динамических систем.изд. СПбГУ, 2005.
[2] Петренко Е.И. Разработка и реализация алгоритмов построения
символического образа. Электронный журнал "Дифференциальные
уравнения и процесcы управления",(http://www.neva.ru/journal), номер
3, 2006.
[3] Aronson D.G.,Chory M.A., Hall G.R. et.all Bifurcation from an invariant
circle for two-parameter families of maps of the plane: A computer-assisted
study. Commun.Math.Phys.83,3(1982), p.303-354.
[4] Fundinger D. Implementation of the Symbolic Image. in: G. Osipenko. Dynamical System, Graphs, and Algorithms. Springer, 2007.
[5] Ikeda K. Multiple-valued stationary state and its instability of the transmitted light by a ring cavity system, Opt. Commun. 30 (1979), p.257-261.
[6] Neumaier A. Interval Methods for systems of equations, Cambridge University Press 1990.
Электронный журнал. http://www.neva.ru/journal, http://www.math.spbu.ru/user/diffjournal/ 64