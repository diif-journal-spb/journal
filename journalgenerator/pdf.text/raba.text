ДИФФЕРЕНЦИАЛЬНЫЕ УРАВНЕНИЯ 
И 
ПРОЦЕС С Ы УПРАВЛЕНИЯ 
№ 3, 2007 
Электронный журнал, 
рег. № П2375 от 07.03.97 
ISSN 1817-2172 
 
http://www.newa.ru/journal 
http://www.math.spbu.ru/user/diffjournal 
e-mail: jodiff@mail.ru 
 
Моделирование динамических систем 
 
 
 
 
РЕАЛИЗИЦИЯ АЛГОРИТМОВ ПОСТРОЕНИЯ 
ГИПЕРКОМПЛЕКСНЫХ МНОЖЕСТВ 
ЖЮЛИА И МАНДЕЛЬБРОТА 
 
РАБА Н. О. 
 
Россия, 198504, Санкт- Петербург,  
Петродворец, Унив ерситет с к и й пр., дом 28, 
Санкт- Петербургский Государственный Универ ситет 
мат е мати ко- механ и ческий факультет 
e-mail: no13@inbox.ru 
 
 
Анно т а ция 
В данной статье описываются методы и алгоритмы визуализации 
гиперкомплексных множест в Жюлиа и Мандельброта: быстрый, но дающий не 
очень хорошие результаты метод обратных итераций ( подходящий только для 
визуализации множеств а Жюлиа), или более точный, но требующий намного 
больше в ы числений метод трассиров ки лучей. Для метода трассировки лучей 
приводятся два способа нахождения пересечения луча с мно жество м: 
усовершенствованный классический и использующий оценку расстояния до 
множеств а. Также дает ся оценка скорости и ка чес тва работы алгоритмов. 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  26 
1 Вве д ение 
Множест ва Жюлиа квадратичной функции ( и других функций) существ у ют не 
только на ко мплексной плоскости, но и в пространствах с большими 
размерностями, в частности, в гиперкомплексном пространстве. Так ка к 
комплексная плоскость – это подмнож ество гиперкомплексного пространств а, то 
любое ком п лекс ное множ ество Жюлиа существует в гиперкомплексно м 
пространстве и имеет продолжение вне комплексной плоскости. 
Гиперкомплексное множест во Жюлиа содержит больше информации, чем его 
комплексное подмножество.  
Визуализ ация гиперкомплексных множеств Жюлиа более сложная зад а ча по 
сравнени ю с комп лек с ными множест вами. Гиперкомплексное про с транство – это 
четырехмерное пространств о, а человек во спринимает только трехмерное ( в 
действительности, проекцию трехмер н ого – дв ухмерное). Поэтому необходимо 
проецировать четырехмерную фигуру на плоскость.  
В [1] и [2] дает ся определение фрактало в, ко мплексных мн ожеств Мандельброта и 
Жюлиа, двоичного разбиения, описываются основные алгор и тмы для их 
построения. В [3] дается теоретическая основа и алгоритмы для постр о ения 
гиперкомплексных множест в Жюлиа и Мандельброта. Алгоритм построения 
множеств Жюлиа с помощью метода обратных итераций приведен в [4], где также 
объясняются некоторые полезные для этого метода свойства кватернионов. В [5] 
описывается метод трассировки лучей с использованием оценки расстояния для 
построения гиперкомплексных множеств Жюлиа. В [6] описывает ся классич е ский 
метод трассировки лучей.  
В данной статье для метода трассировки лучей предложены два способа 
нахождения пересечения лу ча с множество м. Первый – усовершенствованный 
классический, работающий быстрее классич еского при одинаковой точности 
( либо дающий большую точность при один аковом в р емени работы). Второй 
способ использует оценки расстояния, приведенные в [3]. 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  27 
2 Ква т ернионы 
Кват ернионы ( гип е ркомплексные чи сла) были введены Гамильтоном в 19 веке. 
Множест во гиперкомплексных чисел обозначается H. 
По ан алогии с комп лексным число м, к ватернион q =  r + a·i + b·j + c·k, где i, j, k – 
мнимые единицы (i
2
 = j
2
 = k
2
 = –1), r, a, b, c – вещественные. Таким образом, 
гиперкомплексные числа порожда ются вещественн ой единицей 1 и тремя 
мнимыми i, j, и k.  
 
Обозначения:  
Re(q) = r – вещественная часть q, Im
i
(q) = a, Im
j
(q) = b, Im
k
(q) = c, 
Pu(q) = Im
i
(q)·i + Im
j
(q)·j + Im
k
(q)·k = a·i + b·j + c·k –  мни м ая ч аст ь q,  
S = {q ∈ H: |q| = 1} – сф ера ра диус а 1 в H, 
S
2
 = {q ∈ H: |q| = 1, Re(q) = 0}. 
Кват ернион, у к о торого вещественная часть нулевая, назы вает ся чистым 
кватернионом. Если q – чист ый кват ернион, то Pu(q) = q. 
Пусть P – пространство ( трехмерное) чис тых кватернионов. Тогда H = R ⊕ P, так 
как q = Re(q) + Pu(q), Re(q) ∈ R, Pu(q) ∈ P.  
S
2
 можно определить по- другому: S
2
 = {q ∈P: |q| = 1} – сфера чи сто мнимых точек 
радиуса 1. 
Гиперкомплексное пространство – продолжение комп лексной плоскости ( по 
аналогии с тем, что комплексн а я плоско сть – продолжение вещест венной 
прямой). Комплек с ные числа – гиперкомплексные, у которых Im
j
 = Im
k
 = 0 
( веществ е нные, если еще и Im
i
 = 0). 
 
Иногда кватернионы представляют в виде  
• вещественного числа r и 3- х мерного вектора (a, b, c) ( разложение H на R и 
P: r ∈ R, (a,b,c) ∈ P) 
• c
1
+c
2
·j, где c
1
, c
2
 – ком п лекс ные, c
1
 = r + a·i, c
2
 = b + c·i Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  28 
• R·(A + B·u) = R·cos( θ) + R·sin( θ)·u, A, B, R, θ – вещест венные, R – модуль 
кватерниона ( см. дале е), A
2
 + B
2
 = 1, u ∈ S
2
. 
 
2.1 Действия с кватернионами 
Пусть k c j b i a r q ⋅ + ⋅ + ⋅ + = , k c j b i a r q ⋅ + ⋅ + ⋅ + =
1 1 1 1 1
, k c j b i a r q ⋅ + ⋅ + ⋅ + =
2 2 2 2 2
 
Сложение и вычи тание выполняются поко м п оне н тно: 
k c c j b b i a a r r q q ⋅ + + ⋅ + + ⋅ + + + = + ) ( ) ( ) ( ) (
2 1 2 1 2 1 2 1 2 1
 
k c c j b b i a a r r q q ⋅ − + ⋅ − + ⋅ − + − = − ) ( ) ( ) ( ) (
2 1 2 1 2 1 2 1 2 1
 
Умножение кватернионов похоже на умножение полиномов с тремя 
переменными i, j, k, но со специфическими свойствами: 
j k i i j k k i j j i k i k j k j i k j i − = ⋅ − = ⋅ − = ⋅ = ⋅ = ⋅ = ⋅ − = = = , , , , , , 1
2 2 2
. 
Поэтому умножение не коммутативно. 
k a b b a r c c r j c a a c r b b r
i b c c b r a a r c c b b a a r r q q
⋅ − + + + ⋅ − + +
+ ⋅ − + + + − − − = ⋅
) ( ) (
) ( ) (
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1
  
Сопряжение: k c j b i a r q ⋅ − ⋅ − ⋅ − =
∗
 
Модуль: 
2 2 2 2
| | c b a r q q q + + + = ⋅ =
∗
 
Свойство: | | | | | |
2 1 2 1
q q q q ⋅ = ⋅ 
Обратное: 1 ,
| |
1
2
1
= ⋅ =
−
∗
−
q q
q
q
q 
Деление: 
1
2 1
2
1 −
⋅ = q q
q
q
 
Скалярное произведение: 
2 1 2 1 2 1 2 1 2 1 2 1
        ) Re(  , c c b b a a r r q q q q + + + = ⋅ = > <
∗
 
Нормализ ация: 
| |
) (
q
q
q Un = , если 0 ≠ q  
S q Un ∈ ) ( , а если P q ∈ , то 
2
) ( S q Un ∈ 
Возвед ение в квадрат: k rc j rb i ra c b a r q ⋅ + ⋅ + ⋅ + − − − = 2 2 2 ) (
2 2 2 2 2
 
Возвед ение в степень n ∈N: 
4 3 42 1
K
n
n
q q q q ⋅ = Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  29 
Но удобнее представить q в виде u R R ⋅ ⋅ + ⋅ ) sin( ) cos( θ θ , где 
2
S u ∈ , и 
воспользо в аться формулой: u n R n R q
n n n
⋅ ⋅ + ⋅ = ) sin( ) cos( θ θ 
Извлеч ение корня 
Корнем ( ква д ра тным) из q н а зывает ся такое z, что z
2
 = q.  
В R, так же, как и в C, возведение в ква д ра т – отображение 2 к 1 ( везде, кро м е 0). 
Но в H это не так. Здесь возможно отображение бесконечного числа точек в одну. 
Например, q
2
: S
2
 → –1. В общем, люб а я сф ера чисто мн имых точек с радиусом r 
∈ R
+
 (S
2
·r), св ертывает ся в одну точку на R
–
 ( а именно, в точку –r
2
).  
Их этого следует, что корней из q мож е т быть б ескон ечн о е число. 
Возможн ы следующие случ аи: 
1) q = 0 ⇒ 1 корень равный 0 
2) q = r (r ∈ R, r > 0) ⇒ 2 корня, r ± 
3) q = r (r ∈ R, r < 0) ⇒ беск онечное множество корней 
} | | : { } 0 ) Re( , | | : {
2
r p P p p r p H p r S − = ∈ = = − = ∈ = − ⋅ 
4) q ∈ H, Pu(q) ≠ 0 ⇒ 2 корня: 
r
q
r
q
r
q
r
k
j
i
2
) ( Im
2
) ( Im
2
) ( Im
+ + + , где 
2
| | ) Re( q q
r
+
± = 
 
2.2 Повороты 3- х мерного пространства 
Одно из самых интересных свойств кватернионов – это во змо жн о сть представлят ь 
поворот ы 3- х мерного пространств а. 
Предст ав им 3- х мерное пространство R
3
 в вид е пространств а чис тых 
кватернионов P. Если g – единичный кватернион (|g| = 1), то определим 
отображение ρ: R
3
→R
3
 уравнением  
ρ(Z) = gZg
–1
, где Z ∈ P, 
описываю щим поворот 3- х мерного пространств а вокруг оси u на угол θ, где 
g = cos( θ/2) + sin( θ/2)·u 
Здесь u – чистый кватерни он единичной длины, следо вательно, вектор в 3- х 
мерном п ространстве. Любой единичный кватернион можно представить в тако м 
виде. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  30 
Этот метод представления поворот ов с помощью кватер нионов очень полезен в 
компьютерной граф ике для выполнения вращен ия без использования матриц. 
След стви е 1. Для любого кватерниона q су ществует единичный кват ернион p 
такой, чт о p
–1
·q·p – комплексное число. То есть любой кват ернион может быть 
повернут в комплексную плоско ст ь с помощью соответствующего единичного 
кватерниона. 
След стви е 2. Можно определить ось вращения, являющегося композицией 
вращений, перемножив соответствующие этим в р ащения м кватернионы. 
 
2.3 Гипер к омплексные полиномы 
Комплек с ные числа можно рассматривать ка к подмножество гиперкомплексных, 
а комплексные полиномы – как гиперкомплексные полиномы. Например, 
выражени е вида a·x
2
 + b·x + c, где a, b, c ∈ C, яв ляет ся также гипер к омплексным. 
Однако, некоммутативность умножения кватернионов влеч ет за собой то, что 
многие полиномы не могут быть так просто описаны. Например, следующи е 
полиномы не эквивалентны, за исключением случая, когда a и b в е щественн ые 
x
2
·a + b·x + c, 
x
2
·a + x·b + c, 
x·a·x + b·x + c и т. д. 
Гиперкомплексные полиномы могут быть определены так 
ik
l
k
m
i
i i
p x x p x p x p
∑∑
==
⋅ ⋅ ⋅ ⋅ =
00
1 0
) ( K , 
где l и m целые, l – степ ень полинома, p
ij
 ∈ H. 
 
2.4 Гипер к омплексные множества Жюлиа и Мандельброта 
Пусть f: H → H ( например, f(h) = f
q
(h) = h
2
 + q).  
Бассейн притяжения бесконечно удаленной точки ( ∞) для отображения f  
A
f
( ∞) = {h ∈ H: |f
n
(h)| → ∞, если n → ∞}. 
Множест во Жюлиа для отображения f – это граница мно жеств а  A
f
( ∞)., т. е. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  31 
J(f) = jA
f
( ∞), 
наполненное множ ество Жюлиа 
K(f) = H \ A
f
( ∞) = { h ∈ H: |f
n
(h)| ограничен, если n → ∞}. 
Множест во Мандельброта 
M = {q ∈ H: 0 ∈ K(f
q
), где f
q
(h) = h
2
 + q} 
 
Рис.1. Гиперкомплексные множества Жюлиа и Мандельбр о та 
 
2.5 Оценка расстоя ния ( для комплексного мно жес тва Жюлиа и 
Мандельброта) 
Подробн о е доказательство оценок расстояния для ко мплексны х и 
гиперкомплексных множеств Жюлиа и Мандельброта приведено в [3]. 
По существу, на комплексной плоскости формулы оценки расстояния для 
множеств Жюлиа и Мандельброта одинаковы. Поэтому будем рассмат р ивать 
только мн ожеств а Жюлиа. 
Пусть c ∈ M ( комплексно е множ ество Мандельброта), тогда K
c
 ( наполненное 
комплексное множ ество Жюлиа для отображения f
c
(z) = z
2
 + c) связно. Пуст ь D = 
{z ∈ C: |z| ≤ 1} – диск единичного радиуса с центром в начале координ ат на 
комплексной плоскости. В этом случ ае сущест вует взаимнооднозначно е 
биголоморфное отображение Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  32 
φ
c
: C \ K
c
 → C \ D, 
для которого φ
c
(z) → ∞, когда z → ∞. 
D C Kc C
f f
D C Kc C
c
c
c
\ \
\ \
0
⎯→ ⎯
↓ ↓
⎯→ ⎯
ϕ
ϕ
 
Другими словами, f
0
(z) = φ
c
(f
c
( φ
c
–1
(z))), то ест ь итерация f
0
 вне D эквивалентна 
итерации f
c
 вне K
c
. 
Определи м функцию потенциала ( потенциал) для K
c
: 
G(z) = ln(| φ
c
(z)|) 
и функцию времен и убегания: 
ε = –ln(G(z)). 
Существ е нно, что K
c
 свя з но, иначе φ
c
 не су щест вовало бы. 
Пусть d(z, K
c
) – расстояние от точки c ∈ C до множества Жюлиа K
c
. То гд а 
расстояни е d(z, K
c
) между то чкой z, лежащей вн е K
c
, и K
c
 удовлетворяет 
,
| (z) G' |
) 2sinh(G(z)
  ) K d(z,  
| (z) G' | 2e
sinh(G(z))
c
G(z)
< <
 
где G(z) – потенциал в точке z. 
Приближение этог о неравенства мож е т быть зап и сано ка к 
) ln(
| ' |
| |
) , ( |) ln(|
| ' | | | 2
| |
2
1 n
n
n
c n
n n
n
z
z
z
K z d z
z z
z
n
< <
 
и имеет большое п р актическ ое значен ие для построения множеств Жюлиа. Оно 
также обобщает ся на кватернионы.  
 
2.6 Оценка расстояния ( для гиперкомплексного множества Ма ндельброта) 
Пусть M
4
 обозначает гиперкомплексное множество Мандельброта, M
2
 – 
комплексное. Пуст ь q ∈ H, т о гда существует p ∈ H, |p| = 1 такое, что p
–1
qp = c ∈ 
C ( см. пу нкт 2.2). Назов е м c соответствующим комплексным значением для q. 
Для любого q ∈ H и его соответствующего ко мплексного знач ения c ∈ C,  
q ∈ M
4
, если и только если с ∈ M
2
. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  33 
Для любого q ∈ H и любого p ∈ H, |p| = 1,  
q ∈ M
4
, если и только если pqp
–1
 ∈ M
4
. 
Для любого c ∈ C, расстояни е от c до M
4
 равно расстояни ю от c до M
2
: 
d(c, M
4
) = d(c, M
2
). 
Для любого q ∈ H и его соответствующего ко мплексного знач ения c ∈ C,  
d(q, M
4
) = d(c, M
2
). 
Расстояни е от точки q, леж а щей вне гиперкомплексного множеств а 
Мандельброта M
4
, до M
4
 ограничено 
|), ln(|
| ' |
| |
) , ( |) ln(|
| ' | | | 2
| |
4
2
1 n
n
n
n
n n
n
Z
Z
Z
M q d Z
Z Z
Z
n
< <
 
где Z
n
 = F
n
(Z
0
), Z
0
 = 0, F(Z) = Z
2
 + q (F: H → H). 
 
2.7 Оценка расстояния ( для гиперкомплексного множества Жюлиа) 
Расстояни е d(h
0
, K
q
) между точкой h
0
, лежащей вне K
q
, и K
q
 удовлетворяет 
следующему неравенству 
d(h
0
, K
q
) > α |h
n
| / D(|h
n
|), 
где h
0
 ∈ H, D(|h
n
|) = 2|h
n–1
|D(|h
n–1
|), K
q
 – наполненное мн ожество Жюлиа для f
q
(h) 
= h
2
 + q (h, q ∈ H), α – положительн а я веществ е нная константа.  
 
2.8 Притяжение/ о тталкивание множества Жюлиа 
Множест во Жюлиа (J = J(f
c
)) – отталки ваю щее по отношению к f
с
. Это значи т, 
что орбит ы точек, находящихся около J, уходят далеко от него. И, наоборот, 
множеств о J – притягивающее по отношению к обратной функции f
c
-1
 (q) = c q − 
( орбит ы точек, нах о дящихся далеко от J, приближаются к нему), по этому 
погрешность вычислений уменьшается при последовательн ых итерациях f
c
–1
. 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  34 
2.9 j-k эквивалентность 
Динамика F(h) = c
1
h
2
 + c
2
 (c
1
, c
2
 ∈ C) не за вис и т от угла θ в 
h = z
1
 +e
i θ
z
2
j, 
где z
1
, z
2
 ∈ C.  
В ч астности, пусть g
θ
(z
1
+z
2
j) = z
1
 + e
i θ
z
2
j, тогда g
θ
(F(g
–θ
(h))) = F(h). 
Можно рассматрив ать функцию g
θ
(h) как вращени е 4- х мерного простра н ства, 
которое фиксирует комплексную плоскость. Видно, что 4- х мерное множест в о 
Жюлиа п о лучает ся с помощью вращения 3- х мерного множеств а Жюлиа вокруг 
комплексной плоскости. 
Это свойство 4- х мерного множеств а Жюлиа наз ы вает ся j-k эквивалентностью. 
 
2.10 Множества Жюлиа ква д ратичного сем ейства 
Классич е ское гиперкомплексное множество Жюлиа определяется функцией 
f
q
(z) = z
2
 + q, 
где q ∈ H. Рассмотрим случай q = c ∈ C. Поэтому 
f
c
(z) = z
2
 + c 
расшир е ние комп лексной функции. 
Так ка к комплексная плоскость – это подмножество гиперкомплексного 
пространства, то любое комплексное множество Жюлиа сущест вует в 
гиперкомплексном простра н стве и часто имеет продолжение вн е комплексной 
плоскости.  
Когда c ∈ R, гиперкомплексное множество Жюлиа – всего ли шь повер х ность 
вращения в H 2- х мерного множеств а Жюлиа вокруг вещественной оси. 
Если c имеет мнимые компоненты, то продолжение не тривиальное. 
Гиперкомплексное множест во Жюлиа содержит больше информации, чем его 
комплексное подмножество.  
Множест ва Жюли а для f
c
(z) = z
2
 + c могут быть визуализированы в 3- х мерн о м 
пространстве с по мощью нахождения пересечения 4- х мерного объекта с 3- х 
мерным п ространством, натянутом на векторы 1, i, j ( из- за j-k эквивалентности). Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  35 
Существу ют соответствующие q (q ∈ H), единичный кват ернион p (|p| = 1) и 
комплексное число c, такие, что pqp
–1
 = c. Тогда множест во Жюлиа J
q
 для f
q
(z) = 
z
2
 + q (q ∈ H) может быть получено с помощью поворота в гиперкомплексно м 
пространстве множеств а Жюлиа J
c
 для f
c
(z) = z
2
 + c (c ∈ C). 
 
3 Алг оритмы пост роения гиперк о м плек сных мно ж е с тв 
 
3.1 Метод обратных итераций 
Простейшим метод о м постр о ения мн ожеств Жюлиа я вляет ся метод обратных 
итераций. Он использу ет тот факт, что множество Жюлиа являе тся 
притягивающим для обратной функции. Этот метод не требует больших 
вычислен ий и использует малое коли чест во памяти, но не позволяет получать 
мелких деталей. Изображения, полученные с помо щью этого метода – облака из 
точек, плохо отображают пространств е нную структуру множеств а. 
Пусть n – количеств о генерируемых точек. 
Выбирает ся произвольная нача льна я точка. После m итер аций обратной функции 
точка ст ановится очень близкой к мн ожеству J. Если вы брать начальную точку 
принадлежащей J, то m мож н о принять равной 0. Каждая последу ю щая итерация 
точки выводится на экран. 
Гиперкомплексный метод обратных итераций отличает ся от классич е ского не 
только использованием гиперкомплексных вычислений, но и учетом некоторых 
свойств H ( например, особенности вычислен ия корней) и ги п е ркомплексных 
множеств Жюлиа ( например, j-k эквивалентность). 
Подробн о е описани е метода обратных итераций можно найти в [3] и [4]. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  36 
 
3.2 Метод трассировки лучей 
Этот метод требует намного больше вычислений, но по зволяет лучше показывать 
структуру множества, увеличивать фрагменты изобра жения. Он позволяет 
строить не только множеств а Жюлиа, но и множество Мандельброта.  
Главная част ь этого метода – это получение точки пересечения лу ча с 
поверхностью ( границей) мн ожеств а и определение нормали к поверхности в этой 
точке.  
Поскольку границы множества Мандельброта и почти всех мн ожеств Жюлиа 
недиффер е нцируемы, то нормали к этим границам не определены. Мы приводим 
алгоритм вычислен ия нормалей к приближенным границам.  
Луч задается начальной точкой q
0
 и направлением dir (q
0
, dir ∈ H, |dir| = 1, q
0
 не 
принадлежит K(f
c
) ( или M, если строится множ ество Мандельброта)). Точка h на 
луче, н а ходящая ся на расстоянии dist от начала луча, определяется по следующей 
формуле: h = q
0
 + dir·dist ( см. рис. 2). 
 
Рис.2. Пересечение лу ча с границей множества 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  37 
3.3 Первый способ ( классический) нахождения расстоя ния от начала луча до 
точк и пересечения. 
Дополнительно задаются макси м альное расстояние maxD, дальше которого 
пересечение не ищется, и количество разбиений n ( мож н о интерпретировать как 
точность). Определяется шаг по расст оянию ∆D = maxD / n. С этим шагом мы 
“ идем” по лучу и проверяем принадлежность то чки на лу че ( на шаге s: h
s
 = q
0
 + 
dir· ∆D·s) наполненному множеству Жюлиа.  
Если на шаге s точка h
s
 принадлежит K(f
c
) ( алгоритмы определения 
принадлежности точки множеству Мандельброта и напо лненн о му множеству 
Жюлиа п р иведены в Приложении), то считается, что расстояние от начала лу ча до 
точки пер е сечения равно dist = ∆D·(s – 1) ( см. рис. 3). Если после n шагов условие 
принадлежности не выполн яется, то считается, что луч не пересек множ ество, и 
можно положить dist равным maxD. Подобный алгоритм нахождения рассто яния 
используется в [6]. 
 
Рис.3. Классический способ нахождения расстояния 
 
Недост атки данного способа нахождения пересечения: 
1) с возрастанием точн ос ти ( количест ва разбиений n) пропорц и онально 
возрастает время поис ка пересечения; Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  38 
2)  даже если луч пересекает K(f
c
), и расстояние от начала луча до точки 
пересечения мен ь ше maxD, пересечение мож е т быть не найдено ( такое 
случ ает ся, когда длина отрезка луча внутри K(f
c
) меньше ∆D; см. рис.4); 
3) может быть найдено не первое пересечение луча с K(f
c
) ( та же причина). 
 
Рис.4. Пересечение не найдено 
 
3.4 Усовершенствование первого способа 
Для увеличения точн ос ти вычислен ия расстояния мож н о рекурсивно вызвать 
процедуру нахождения расстояния от начала лу ча до точки пересечения с K(f
c
). 
Выбирает ся луч с направлением dir ′ = dir и началом q
0
′ = q
0
 + dir· ∆D·(s – 1), 
maxD ′ = ∆D, n ′ можно выбрать и не равным n, но ≥ 2. Если для этого луча 
получилось рассто я ние dist ′, то для начального луча dist = ∆D·(s – 1) + dist ′ ( см. 
рис. 5). 
 
Рис.5. Усовершенствование класси ческого спо с оба 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  39 
3.5 Второй способ 
Пусть есть функции d
min
 и d
max
, которые для ка ждой точки q выдают 
минимальную и максимальную оценку расстоя ния от q до множества K(f
c
), ( см. 
пункты 2.5 – 2.7). Примечание: на р а сстояние d
min
(q), от q (q не принадлежит 
K(f
c
)) нет ни одной точки из K(f
c
). 
1. Выбирает ся точка q = q
0
 (q
0
 не принадлежит множеству). 
2. Вычисляется dMin = d
min
(q) и dMax = d
max
(q). 
3. q = q + dir·dMin (q по- прежнему не принадлежит множест ву). 
4. Если |dMax – dMin| < ε ( заданная по грешност ь), то точка пересечения q 
найдена ( точнее q – это точка, нах о дящая ся в ε- окрестности границы 
множеств а). Рассто я ние от начала луча до точки пересечения dist = |q
0
 – q|. 
Выход. 
5. Если |q
0
 – q| > maxD ( см. предыдущий алгоритм) то пересечения нет. 
Положим dist = maxD. Выхо д. 
6. Переход к 2. 
 
Есть еще один вариант этого алгоритма, в котором не используется функция d
max
. 
В этом ва риа н те в пункте 2 dMax не вы числяется, а проверка в пункте 4 
заменяется на dMin < ε. Такой алгоритм будет работать быстрее, но с меньшей 
точностью определять расстояние. В к а ч ест ве dMin удобн о брать оценку из 
пункта 2.7. В этом случ ае dMin вычисляется итеративно с помощью приведенных 
в этом пу нкте фор м ул ( параметр n вы бирается, а за тем  константа α подбирает ся 
опытным путем) Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  40 
 
Рис.6. Способ, использу ющий оценк у расстояния 
 
3.6 Сравнение способов нахождения расстояния до точки пер е сечения 
При один аковой точности во втором способе ( испо льзу ю щ е м оценку рассто я ния) 
за сч ет переменного шага по лучу пересечение находится за мень шее число 
шагов, че м в классическо м спосо б е, и примерно за тако е же,  как в 
усовершенствованном классическом. Также во втором способе отсутствуют 
недостатк и 2) и 3) классич е ск ого.  
 
3.7 Перех о д от 4D к 2D, вы числение матрицы расстояний 
Определи м направление пр оектирования ( вектором zDir), и проекционную 
плоскость P ( точкой center на этой пло с ко сти и двумя векторами xDir, yDir; P 
имеет раз м ерность 2). Векторы center, xDir, yDir, zDir ∈ H, причем xDir, yDir, 
zDir ортонормиров анные.  
Точка на плоскости P за дае тся следую щим образом:  
q = center + x·xDir + y·yDir, 
где x, y ∈ R – координаты этой точки в базисе (xDir, yDir).  Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  41 
Также определим минимальное и максимальное рассто яния до проекционной 
плоскости P (minDist и maxDist соответственно) и стороны п р ямоугольной 
области проектирования (dx и dy) с центром center на этой плоскости. minDist, 
maxDist, dx, dy ∈ R, minDist < maxDist, dx > 0, dy > 0 (minDist и maxDist могут 
быть меньше 0). Проектирование будет производиться только на эту 
прямоугольную час ть пло с кости P. Проектироваться будет только та част ь 
множеств а, которая находится между плоскостями P
min
 и P
max
, где P
min
 и P
max
 – 
смещения плоскости P на векторы minDist·zDir и maxDist·zDir соответственно. 
Эти параметры определяют область A в H: 
A = {h ∈ H | h = center + x·xDir + y·yDir + z·zDir, где 
–dx/2 ≤ x ≤ dx/2, –dy/2 ≤ y ≤ dy/2, minDist ≤ z ≤ maxDist}. 
Таки м образом, будет отображаться только та част ь мно жеств а, которая попала в 
область A. 
 
Рис.7. 
Пусть надо получ и ть изображение с разрешением xRes × yRes. Выч и слим 
матрицу расстояни й m ( размерностью xRes × yRes). Для элемента m[a, b] 
вычисли м  
q
ab
0
 = center + dx·(a/xRes – 0.5)·xDir + dy·(b/yRes – 0.5)·yDir + minDist·zDir. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  42 
Для луча с начало м q
ab
0
 и направлением zDir найдем расстояни е d
ab
 от q
ab
0
 до 
точки пересечения с K(f
c
) ( любым методом; maxD = maxDist – minDist). Занесем 
это значение в матрицу расстояний (m[a, b] = d
ab
). 
 
Рис.8. 
 
3.8 Вычисление но рмалей 
Как уже упоминалось ранее, мы будем вычислять нор м али к приближенной 
границе ( поверхности) мно жеств а. Приближенная поверхность – “ гладкая” 
поверхность, проходящая че ре з точки q
ab
 = center + dx·(a/xRes – 0.5)·xDir + 
dy·(b/yRes – 0.5)·yDir + (minDist + m[a, b])·zDir, принадлежащие окрестн о сти 
реальной границы множеств а.  
Вычислим трехмерную нормаль ( в подпростра н стве, натянутом на векторы xDir, 
yDir, zDir) к этой поверхности в точке q
ab
. Ненормированные координаты (x, y, z) 
этой нормали имеют вид: 
x = (m[a + 1, b] – m[a – 1, b]) / ∆x, 
y = (m[a, b + 1] – m[a, b – 1]) / ∆y, 
z = 2, 
где ∆x = dx / xRes, ∆y = dy / yRes. 
После это г о вектор (x, y, z) нужно нормировать. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  43 
 
3.9 Получение изо б ражения 
Пусть зада н источник св ета, то есть задан о направление lightDir на него 
( трехмерный нормированный вектор) и его цвет (red, green, blue). Пусть normal
ab
 
– нормаль, соответствующая паре (a, b) ( то есть нормаль к поверхности в точке 
q
ab
). Пусть brightness
ab
 = lightDir·normal
ab
 ( скалярное произведение векторов 
lightDir и normal
ab
, равняется косинусу угла между этими векторами, так как их 
модули равны 1). 
Если brightness
ab
 ≤ 0, то пиксель (a, b) красит с я черным, иначе цвето м 
(brightness
ab
·red, brightness
ab
·green, brightness
ab
·blue). Можно использовать 
несколько источников цвета. В этом случае цвета от каждого источника 
суммируются. 
 
4 Программа “Quaternions” 
 
 
Рис.9. Программа “Quaternions” Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  44 
 
 
Возможности построения  
• множеств Жюлиа для отображения h
n+1
 = h
n
2 
+ c методом обратных 
итераций; 
• множеств Мандельброта и Жюлиа для отображения h
n+1
 = h
n
2 
+ c методом 
трассиров ки лучей ( возможен выбор из 2 способов нахождения точки 
пересечения). 
 
Возможности реализации 
• несколько способов « навигации» по фракталам; 
• сохранение и загрузка параметров фракталов ( в файл / из файла 
специального формата); 
• сохранение построенных фракталов ка к изображения (bmp);  
• измерение скорости работ ы программы: общего времени построения 
( расчет а) фрактала; среднего времени, затрачиваемог о на вычислени е 
одного пикселя изображения; среднег о количества пикселей, вычи сленных 
за одну секунду; 
• освещени е тремя цветным и источниками св ета; 
• зеркально е отражение поверхностью фра ктала произвольной картинки. 
 
5 Оценк а ск орости и ка че ства работы а л г оритм о в 
Скорость работы алгоритмов ( трассировки лучей с использованием различных 
способов поиска пересечения луча с множеством) оценивалась с помо щью 
программы “Quaternions”. Среднее ко личество пикселей, вычисленных за одну 
секунду, было выбрано в качест ве параметр а скорости работы. Все измерения 
были выполнены на одном компьютере ( что б ы условия были максимально Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  45 
похожими). Кач ество работ ы алгорит м ов оценивалось визуально по получ а емо й 
картинке. 
 
 
Рис.10. 
 
 
Оценки скорости работы алгоритмов построения множеств а, показанного на 
рисунке 10, приведены 
• на графике 1 ( используется к л ассич е ск ий способ поиска пе ре се че ния луча с 
множеством; maxIter = 20, r = 4, см. пункт A Приложения); 
• на графике 2 ( усовершенствованный классический, два вложенных 
рекурсивных вызова с n ′ = 10, см. пункт 3.4; maxIter = 20, r = 4); Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  46 
• на графике 3 ( оценк а расстоя ний; скорость работы для различных значени й 
параметра maxIter, знач ение константы α приведено на графике 4, см. 
пункт C Приложения). 
 
Из графиков 1 и 2 видно, что алгоритмы, использующие классический ( первый 
алгоритм) и усовершен ствов а нный классически й ( второй алгоритм) способы, 
работают практически с о д инаковой скоростью ( при равном количеств е 
разбиений второй алгоритм ли шь немного медленнее). При увелич ени и 
точности ( количест ва разбиений) в 2 раза скорость уменьшает ся в 2 раза, т. е. 
время работы этих алгори тмов линейно зависит от количеств а разбиений. 
График 3 показыв ает пр еимущество третьег о алгоритма ( использующего 
оценку расстояния): при увеличении точности в 2 раза скорость уменьшается 
лишь в 1.3 раза ( для maxIter = 50 и maxIter = 80). 
 
 
10922
5676
2910
1468
1000
10000
100000
128 256 512 1024
Ко л и че с т во ра зб ие н и й по ра с с т о ян ию
С кор ос ть ра б о ты алго р и тма (пи кс е л и/ се к)
 
График 1. 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  47 
15887
11523
7640
4613
2598
1387
1000
10000
100000
32 64 128 256 512 1024
Кол ич е с т во ра з б ие н ий по ра с с т о я н ию
С к орос т ь ра бо т ы а л г орит м а ( пик с е л и/ се к)
 
График 2. 
 
100
1000
10000
100000
0,005 0,001 0,0005 0,0001 0,00005 0,00001
Точн о с т ь
Скор ость раб о ты алг оритма ( пиксели/сек)
maxIter = 30
maxIter = 50
maxIter = 80
 
График 3. 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  48 
0
1
2
3
4
5
6
7
8
9
10
0,005 0,001 0,0005 0,0001 0,00005 0,00001
То чн ос т ь
α
maxIter = 30
maxIter = 50
maxIter = 80
 
График 4. 
 
Качество изображений оценивалась визуа л ь н о по увеличенному фрагменту ( см. 
рис. 11). 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  49 
 
Рис.11. 
 
На рисунке 12 показаны результаты работы первого алгоритма ( количеств о 
разбиений по расстоянию 128, 256, 512, 1024). Видно, что достаточно хороший 
результат на данном фрагменте множеств а алгоритм дает при количест ве 
разбиений 512 и больше ( при мень шем коли чест ве очень си льно прояв л яется 
“ слоистость”). 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  50 
 
Рис.12.  
 
Результаты для второго алгоритма приведены на рисунке 13 ( количест в о 
разбиений по расстоянию 32, 64, 128, 256, 512, 1024). Поско л ьку в 
усовершенствованном спосо б е используется два вложен ных рекурсивных вызова 
с параметром n ′ = 10, то реальное коли чест во разбиений в 100 раз больше (10
2
). За 
счет этого исчезает “ слои стость”, присущая изображениям, полученным с 
помощью первого алгоритма. Но при малых знач ения х количества р а збиений 
начинает проявляться эффект “ зазу бренности” границ. Хороший результат 
алгоритм дает при количеств е разбиений 256 и больше. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  51 
 
Рис.13.  
 
На рисунке 14 показаны результаты работы третьего алгоритма, и с пользую щег о 
для поиска пересечения луча с множеством оценку расст ояния ( точность 0.005, 
0.001, 0.0005, 0.0001; maxIter = 80, качест во изображения при других значениях 
maxIter такое же). При небольшой точности (0.005 и 0.001) множество выг л ядит Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  52 
немного “ сглаженным”. При точности 0.0005 результат хороший, отсутствуют 
недостатк и изображений, построенных с помощью пред ыдущих алгоритмов. При 
точности 0.0001 результат наилучший и остает ся таким при дальнейш ем 
увеличении точности ( изменения в к а чест ве изображения настолько 
незначительные, что это по чти невозможно заметит ь). Перв ый алгоритм не 
позволяет добиться такого качест ва даже при 1024 разбие ний по расстоянию, при 
этом построение данного изображения заняло почти в 5 раз больше вр емени. 
Второй алгоритм дает срав нимое качест во картинки пр и 512 разбиений по 
расстояни ю, а работает в 2.6 раза медленнее. 
 
 
Рис.14.  
 
Помимо исследования зависимости ка чес тва и скорости работы алгоритмов от 
точности были проверены з а висимост и и от некоторых других параметров. Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  53 
Для второго алгоритма из учалась за вис и м о сть от параметров maxIter и r 
( результаты для первого алгоритма очень похожи). На графике 5 показан а 
зависи мость скорости работы от maxIter ( коли чест во разбиений по расстоянию 
512, r = 4), на графике 6 – от r ( количество разбиений по расстоянию 512, maxIter 
= 20). На рисунке 15 приведен результат работы алгоритма для maxIter 9, 11, 17 и 
50, на рисунке 16 – для r 0.82, 1, 1.2 и 1.5. 
Чем больше maxIter, тем больше деталей можно увидеть на изображении. При 
maxIter 20 и больше качество картинки хорошее, ви дно достаточно мелкие 
детали. Также хорошее качество карти н ки достигается пр и r > 1.5. 
 
3388
3175
3030
2921
2840
2779
2685
2616
2546
2470
2403
2340
2295
2185
2100
2600
3100
8 9 10 11 12 13 15 17 20 24 30 40 50 80
Коли чест во ит ераций
Скоро сть рабо ты алго ритма ( п и ксели/сек)
 
График 5.  
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  54 
 
Рис. 15.  
 
 
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  55 
2200
2700
3200
3700
0,8 0,82 0,85 0,9 1 1,2 1,5 2 3 4 6 9
Ради ус сф е р ы
Ск ор ост ь работ ы алг о р и т м а ( п и к сели/ сек)
 
График 6.  
 
Рис. 16.  Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  56 
Для третьего алгоритма была исследована зависи мость от α. Зависи мость 
скорости работы по казан а на графике 7. Рисунок 17 показыв ает влияние α на 
кач ест во изображения ( знач ения α 20, 14, 9 и 3). Ви дно, что при больших 
значени я х α изобра жение – облако из точек – совсем не похоже на то, что должно 
получится ( алгоритм неправильно определяет точки пересечения почти для всех 
лучей). При уменьшении α начинает проявляться  реальная структура множеств а 
( алгоритм правильно определяет точки пересечения для большинства лучей). При 
α меньшем некоторого критического значения изображение получается хорошим 
( алгоритм всегда пра вильн о определяет точки пересечения). При дальнейшем 
уменьшен ии α улучшения картинки не происходит, а вот скорость работы 
продолжает падать. Поэтому уменьшать α  дальше кри т ического значения не 
имеет смысла. Зависи м о сть критического значени я α ( приблизительного, 
полученного опыт н ы м путем) от точности и maxIter показана на графике 4. 
0
2000
4000
6000
8000
10000
12000
14000
16000
20
18
16
14
12
10
8
6
4
2,5
1,5
1
0,6
0,2
α
С к орос т ь ра бо т ы а л г орит м а ( пик с е л и/ се к)
 
График 7.  
 Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  57 
 
Рис. 17.  
 
Прило ж ение 
A Опр е д е ление принадлежности точки наполненно му гипер к омплексному 
множеству Жюлиа 
Надо определить принадлежность h
0
 ∈ H напо лненному множест ву Жюлиа для 
отображения f: H → H ( например, f(h) = f
c
(h) = h
2
 + c). Так как наполненно е 
множеств о Жюлиа K(f) = {h ∈ H: ¬ |f
n
(h)| → ∞, при n → ∞}, то точ к а h
0
 
принадлежит ему, если последовательность {f
n
(h
0
)} ограничена. На практике 
бесконеч но итерировать f невозможно, поэтому приходится определять 
ограниченность последовательности приближенно. Выбирает ся достаточно 
большие r ∈ R и maxIter ∈ N. Если все элементы подпоследовательности Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  58 
{f
n
(h
0
)}
0
maxIter
 мень ше по модулю r, то считается, что вся последоват ельност ь 
ограничена, следовательно, h
0
 принадлежит K(f).  
h ∈ H  
m ∈ N 
h = h
0
  
for m = 1 to maxIter do 
    h = f(h)            // h = f
m
(h
0
) 
    if |h| > r then        
        return h
0
_ не_ принадлежит_K(f) 
return h
0
_ принадлежит_K(f) 
 
B Опреде ле ние принад л ежности точки гиперкомплексному множеству 
Мандельброта 
Надо определить принадлежность c ∈ H множеству Мандельброта. Так ка к 
гиперкомплексное множеств о Мандельброта M = {c ∈ H: ¬ f
c
n
(0) → ∞, при n → 
∞} ( например, f
c
(h) = h
2
 + c), то надо опре делить ограниченность 
последовательности {f
c
n
(0)}. Алгоритм проверки аналогичен предыдущему.  
h ∈ H  
m ∈ N 
h = 0  
for m = 1 to maxIter do 
    h = f
с
(h)            // h = f
с
m
(0) 
    if |h| > r then        
        return c_ не_ принадлежит_M 
return c_ принадлежит_M 
 
C Вычисление минимальной оценки рассто яния ( фу нкции d
min
) от то чки до 
гипер к омплексног о множества Жюлиа 
Надо определить минимальную оценку расстоя ния от точки h
0
 ∈ H, лежащей вн е 
множеств а K
q
= {h ∈ H: ¬ |f
q
n
(h)| → ∞, при n → ∞} (f
q
(h) = h
2
 + q). В пункте 2.7 
была дана следующая оценка 
d(h
0
, K
q
) > α |h
n
| / D(|h
n
|), 
где D(|h
n
|) = 2|h
n–1
|D(|h
n–1
|), α – положительная вещественная константа. Т. е. 
необходи м о вычислить α |h
n
| / D(|h
n
|). Выбираются α ∈ R, maxIter ∈ N, Дифференциальные уравнения и процессы управления, № , 2007 
 
Электронный жу рнал. , http://www.math.spbu.ru/user/diffjournal  59 
bigNumber ∈ R. Чем больше maxIter, тем точнее оценка. Конст а н т а α 
подбирается опытным путем. Константа bigNumber зависит от наибольшего 
вещественного чис л а, которое можно представ ить на ко мпьют е ре (2·bigNumber
2
 
должно не превы ш ать этого числа). 
hn ∈ H  
n ∈ N 
dhn ∈ R  
hn = h
0
 
dhn = 1 
for n = 1 to maxIter do 
    dhn = 2 * |hn| * dhn  // dhn = D(h
n
), h
n
 = f
q
n
(h
0
) 
    hn = f
q
(hn)           // hn = h
n
 = f
q
(h
n–1
) = f
q
n
(h
0
) 
    if |hn| > bigNumber then break    
    if dhn > bigNumber then break 
return α * |hn| / dhn   
 
Список литера т уры 
1. Пайтген Х.- О., Рихтер П. Х. « Красота фракталов», Москва, « МИР», 1993.  
2. Ричард М. Кронвер. « Фракталы и хаос в динамических системах. Основы 
теории», Москва, « Постмарк ет», 2000. 
3. Yumei Dang, Louis H. Kauffman, Daniel J. Sandin. Hypercomplex Iterations, 
Distance Estimation and Higher Dimensional Fractals. Series on Knots and 
Everything, vol. 17, 2002. 
4. John C. Hart, Louis H. Kauffman, Daniel J. Sandin. Interactive Visualization of 
Quaternion Julia Sets. IEEE, pp. 209-218, 1990. 
5. John C. Hart, Daniel J. Sandin, Louis H. Kauffman. Ray Tracing Deterministic 3-
D Fractals. Computer Graphics, vol. 23, №3, pp. 289-296, 1989. 
6. Alessandro Rosa. Methods and Applications to Display Quaternion Julia Sets. 
Electronic Journal Differential Equations and Control Processes, №4, pp. 1-22, 
2005. 
