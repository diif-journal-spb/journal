<?xml version="1.0"?>
<project name="dontknow" default="all" basedir=".">

  <property name="base" value="${project::get-base-directory()}" />
  <property name="release" value="${base}/../release" />
  <property name="debug" value="${base}/../debug" />
  <property name="generator.exe" value="${base}/bin/EugenePetrenko.JournalGenerator.exe" />
 
  <target name="make" verbose="true">
    <exec program="C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe">
      <arg value="/p:Configuration=RELEASE" />
      <arg value="/t:build" />
      <arg value="/p:TrackFileAccess=false" />
      <arg path="${base}/src/EugenePetrenko.JournalGenerator.sln" />
    </exec>
  </target> 

  <target name="debug">
     <property name="release" value="${debug}" />
     <call target="build" />
  </target>

  <target name="build" depends="make, run-build, patch"/>

  <target name="run-build">
    <echo message="Use -D:inforeg=&lt;number>-&lt;year> to specify articles generation for inforeg" />
    <echo message="Use -D:inforegs=&lt;count&gt; to specify number of inforeg reports to generate" />
    <echo message="Use -D:rffi=1 to enable RFFI export generation" />

    <property name="release.last" value="${release}\last.success" />

    <tstamp property="release.date" pattern="yyyy-MM-dd HH-mm-ss" verbose="true" />
    <property name="release.path" value="${release}/${release.date}"/>
    <property name="release.path" value="${path::get-full-path(release.path)}"/>

    <delete dir="${release.path}" />
    <mkdir dir="${release.path}" />

    <echo message="Output folder is ${release.path}"/>

    <property name="pInforeg" value="" />
    <property name="pInforegs" value="" />

    <if test="${property::exists('inforeg')}">
      <property name="pInforeg" value="${inforeg}"/>
    </if>

    <if test="${property::exists('inforegs')}">
      <property name="pInforegs" value="${inforegs}"/>
    </if>


    <exec program="${generator.exe}" verbose="true">
      <arg value="/url=http://www.neva.ru/journal"/>
      <arg value="/dest=${release.path}" />
      <arg value="/templates=${path::get-full-path(base + '\templates')}"/>
      <arg value="/data=${path::get-full-path(base + '\data')}" />
      <arg value="/inforeg=${pInforeg}" if="${property::exists('inforeg')}" />
      <arg value="/inforegs=${pInforegs}" if="${property::exists('inforegs')}" />
      <arg value="/rffi" if="${property::exists('rffi')}" />
    </exec>
  </target>

  <target name="patch">
    <if test="${file::exists(release.last)}">      
      <loadfile file="${release.last}" property="to_patch" />
      <property name="patched" value="${release.path}_patch" />
      <exec program="${base}/..tools/patcher/bin/patcher.exe" verbose="true">
        <arg file="${to_patch}" />
        <arg file="${release.path}" />
        <arg file="${patched}" />
      </exec>
    </if>

    <echo file="${release.last}">${release.path}</echo>
  </target>

</project>